C
C *** LAST REVISED ON  4-JAN-1994 10:17:59.56
C *** SOURCE FILE: [LONGLIB93.SOURCES.FORTRAN.MASTER]CVAX3DX.FOR
C
	SUBROUTINE CVAX3DX(A,INX,INZ,NX,NZ,ALPHA,BETA,XH,YH,ZH,IFLAG,
     $		IAXIS,CLOW,NLEV,CVAL,NCH,NMIN,ILINE,IPLS,
     $		XT,NXT,XASTART,XAEND,TX,TSX,FDX,
     $		YT,NYT,TY,TSY,FDY,
     $		ZT,NZT,ZASTART,ZAEND,TZ,TSZ,FDZ,
     $		AMININ,AMAXIN,ICOL)
C
C	CREATED BY D. LONG     AUG 1987	AT JPL
C
C	ROUTINE TO PLOT DATA IN 3-D MESH OR HISTOGRAM COLUMN FORM
C	WITH HIDDEN LINE REMOVAL USING PLT3D OR HLT3D
C	WITH A CONTOUR PLOT UNDERNEATH USING GCONTR
C
C	COORDINATE SYSTEM IS:		Y
C			VARIABLE NAMES:	|	
C				      Z/ \X
C
C	A	REAL ARRAY A(INX,INZ) CONTAINING VERTICAL HEIGHT DATA
C	INX,INZ INTEGERS DIMENSION OF A ARRAY
C	NX,NZ	INTEGERS INDICATING SIZE OF A ARRAY TO PLOT
C	ALPHA	REAL ANGLE (IN DEGREES) OF X AXIS (NX) (ALTITUDE)
C	BETA	REAL ANGLE (IN DEGREES) OF Z AXIS (NZ) (AZIMUTH)
C	XH,YH,ZH REAL LENGTH OF EACH AXIS
C	IFLAG	INTEGER
C		>10000	REPEAT PLOTTING BUT DO NOT INTIALIZE PLOTTER
C		< 0	REPEAT PLOTTING (DON'T CLOSE PLOTTER OUTPUT
C		= 0	CLOSE PLOTTER OUTPUT--DO NOT PRODUCE PLOT
C		> 0	SINGLE PLOT OUTPUT ONLY (PLOTTER OUTPUT CLOSED)
C 	(ONE'S DIGIT) = 2 USE PEN COLOR CONTROL ARRAY
C		      = 1 DO NOT USE PEN COLOR ARRAY
C	(TEN'S)       = 0 MESH (PLT3D) USED
C		      = 1 HISTOGRAM (MLT3D) USED
C 	(HUNDREDS'S DIGIT) = 0 ASK WHICH SCREEN DEVICE TO USE
C		           <>0 SCREEN DEVICE CODE NUMBER
C 	IAXIS	INTEGER AXIS OPTION FLAG
C			= 0	DO NOT PLOT AXIS--FOLLOWING VARIABLES NOT ACCESSED
C			< 0	PLOT AXIS, USE INPUT Y AXIS SCALE--FOLLOWING VARIABLES ACCESSED
C			> 0	PLOT AXIS, USE COMPUTED Y AXIS SCALE--FOLLOWING VARIABLES ACCESSED
C 	(ONE'S DIGIT)	= 1	PLOT AXIS, Y AXIS SCALE--VARIABLES ACCESSED
C			= 2	PLOT AXIS, AUTO SCALE Y AXIS--VARIABLES ACCESSED
C	(TEN'S DIGIT)	= 0	CONTOUR AXES, MESH AXES, BACK PLANE PLOTTED
C			= 1	CONTOUR AXES, MESH AXES PLOTTED W/O BACK PLANE
C			= 2	CONTOUR AXES PLOTTED W/O MESH AXES 
C			= 3	MESH AXES PLOTTED W/O BACK PLANE OR CONTOUR AXES
C			= 4	MESH AXES AND BACK PLANE W/O CONTOUR AXES
C			= 5	CONTOUR AXES W/BACKPLANE AND AXIS LABELED
C				 BUT NO X,Z LABELING ON MESH AXES
C	(HUNDRED'S)	= 0	DEFAULT AXIS PARAMETERS
C			= 1	SPECIALIZED AXIS3 PARAMETERS
C	(THOUSAND'S)	= 0	BACKPLANE AXIS ON BOTH SIDES
C			= 1	BACKPLANCE AXIS ONLY ON LEFT SIDE
C			= 2	BACKPLANCE AXIS ONLY ON RIGHT SIDE
C	CLOW		REAL VERTICAL DISTANCE BETWEEN CONTOUR AND SURFACE PLOT
C	NLEV		INT  NUMBER OF CONTOUR LEVELS
C			     > 0 NUMBER OF LEVELS IN CVAL
C			     = 0 NO CONTOUR PLOT PRODUCED
C			     < 0 IABS(NLEV) LEVELS COMPUTED
C				 FROM (MAX(A)-MIN(A))/ABS(NLEV-1)
C	CVAL		REAL ARRAY OF CONTOUR LEVELS, IF NLEV<0
C			     CONTOURS USED ARE RETURNED
C	NCH		INT  CONTOUR LABEL OPTION
C			     > 0 LABEL WITH ALPHABETIC CHAR
C			     = 0 NO CONTOUR LABELS
C			     < 0 LABEL WITH CONTOUR VALUE, NCH=# DIGITS
C				 TO RIGHT OF DECIMAL POINT
C	NMIN		INT  MINIMUM NUMBER OF CELLS BEFORE CONTOUR LABELED
C			      < 0 LINE TYPES ARE USED
C			      > 0 LINE TYPES NOT USED
C	ILINE		INT  LINE TYPE/WIDTH ARRAY
C				ILINE(1) = UNDERSIDE OF SURFACE
C				ILINE(2) = INTERCONNECT PATH (RETURN IF USED)
C				ILINE(3) = CONTOUR LINE 1
C				ILINE(4) = CONTOUR LINE 2
C				 ...        (LAST RETURNED IF PATH NOT USED)
C	IPLS		INT  CONTROL FOR LINE PATH INTERCONNECTING SURFACES
C			     AND CONTOUR PLOT
C				IPLS(1) = PLOT CODE POINT 1
C					   = 0 END OF LIST
C					   = 3 MOVE TO, PEN UP
C					   = 2 MOVE TO, PEN DOWN
C				IPLS(2) = X ARRAY INDEX
C				IPLS(3) = Z ARRAY INDEX
C				IPLS(4) = PLOT CODE POINT 2
C				 ...
C FOLLOWING ONLY ACCESSED IF IAXIS IS NOT ZERO
C 	XT,YT,ZT	BYTE STRINGS FOR AXIS TITLES
C 	NXT,NYT,NZT	INT  LENGTH OF AXIS TITLES
C			     IF ZERO THEN THAT AXIS NOT PLOTTED
C 	XASTART,ZASTART	REAL AXIS START VALUES
C 	XAEND,ZAEND	REAL AXIS END VALUES
C FOLLOWING ONLY ACCESSED IF HUNDRED'S DIGIT OF IAXIS=1
C	TX,TY,TZ	REAL TICK MARK PATTERN (SEE AXIS3)
C	TSX,TSY,TSZ	REAL SIZE OF TITLE AND NUMBERS OF AXIS
C			  IF <0 DO NOT AUTO-SCALE AXIS BY (x10^POWER)
C 	FDX,FDY,FDZ	REAL AXIS NUMBER LABEL FORMAT (SEE AXIS3)
C 	AMININ,AMAXIN 	REAL YAXIS SCALING FACTORS (ONLY NEEDED IF IAXIS < 0)
C	ICOL		INTEGER COLOR CONTROL (ACCESSED IF MOD(IFLAG,10)=2)
C				ICOL(1) AXIS LINE COLOR 
C				ICOL(2) AXIS NUMERIC LABEL COLOR 
C				ICOL(3) AXIS LABEL COLOR 
C				ICOL(4) AXIS EXPONENT COLOR 
C				ICOL(5) BACK PLANE COLOR 
C				ICOL(6) PLOT COLOR UPPER SURFACE
C				ICOL(7) PLOT COLOR LOWER SURFACE
C				ICOL(8) CONTOUR LINE 1 COLOR
C				ICOL(9) CONTOUR LINE 2 COLOR
C				 ...     (LAST VALUE RETURNED)
C
	DIMENSION A(INX,INZ),CVAL(*),ILINE(*),IPLS(*),ICOL(*)
	DIMENSION IC(4),AS(2)
	CHARACTER*(*) XT,YT,ZT
	LOGICAL REPEAT
	SAVE REPEAT
C
C	WORKING SPACE FOR PLT3D
C
	PARAMETER (NW2D0=4000)
	DIMENSION W2(NW2D0)
C
	COMMON /PLT3B/A1,A2,A3,B1,B2,B3,B4
	SAVE /PLT3B/
	DATA TPI/3.141592654/,REPEAT/.FALSE./
C
	XFORM(I,J,AV)=A1*J+A2*I+A3
	YFORM(I,J,AV)=B1*J+B2*I+B3*AV+B4
C
C	INTIALIZE ROUTINE AND PLOT PACKAGE IF ACCESSED
C
	IF (IFLAG.EQ.0) THEN
		IF (REPEAT) CALL PLOTND		!CLOSE PLOTTER
		REPEAT=.FALSE.
		RETURN
	ENDIF
C
	IF (IAXIS.LT.0) THEN
		AMAX=AMAXIN
		AMIN=AMININ
	ELSE
		AMAX=A(1,1)
		AMIN=A(1,1)
		DO 16IZ=1,NZ		!DETERMINE MAX,MIN ARRAY VALUES
			DO 16 IX=1,NX
				AMAX=AMAX1(AMAX,A(IX,IZ))
				AMIN=AMIN1(AMIN,A(IX,IZ))
16		CONTINUE
	ENDIF
	XLEN=ABS(XH)
	ZLEN=ABS(ZH)
	YLEN=ABS(YH)
	IF (MOD(IABS(IAXIS),10).EQ.2) THEN	!SMOOTH SCALE FACTORS
		AS(1)=AMAX
		AS(2)=AMIN
		CALL SCALE(AS,YLEN,2,1,1,AMIN,DAA)
		AMAX=YLEN*DAA+AMIN
	ENDIF
	YSCALE=1.0
	IF (AMAX-AMIN.NE.0.0) YSCALE=YLEN/(AMAX-AMIN)
C
C	INTIALIZE PLOT PACKAGE
C
	JF=IABS(IFLAG)
	IF (.NOT.REPEAT.AND.JF.LT.10000) THEN
		ILU=JF/100			!GRAPHICS DEVICE CODE
		CALL FRAME(3,ILU,1.5,1.0,1.)	!INTIALIZE LONGLIB
	ELSE
		CALL CTERM(-1)			!PUT TERMINAL IN PLOT MODE
	ENDIF
C
	IAFFF=IABS(IAXIS)/1000			!BACKPLANE AXIS FLAG
	IAFF=MOD(IABS(IAXIS)/100,10)		!AXIS TYPE FLAG
	IAF=MOD(IABS(IAXIS),100)/10		!BACK PANEL, AXES FLAG
	JFF=MOD(JF,100)/10			!SURFACE FLAG
	JF=MOD(JF,10)				!COLOR FLAG
	NLAB=0
	IF (IAF.EQ.5) NLAB=100
C
C	PLOT MESH SURFACE WITH SIMPLE HIDDEN LINE REMOVAL ROUTINE
C
	NW1D=1
	NW2D=NW2D0-10
	IF (JFF.EQ.0) THEN		! PLT3D
		NW1D=4*MIN(NX,NZ)
		NW2D=NW2D0-NW1D-1
		IF (NW2D.LT.NW1D) GOTO 42
	ENDIF
	NW=NW2D+1
	XP=XLEN/2.*COSD(ALPHA)+2.0
	YP=-(XLEN/2.+YLEN/2.)*SIND(ALPHA)*SIND(BETA+180.)
     $		-YSCALE*AMIN+CLOW
C
C	PLOT LOWER SIDE OF SURFACE
C
	IF (JF.EQ.2) CALL PLOT(FLOAT(ICOL(7)),0.,0)	!COLOR SURFACE LOWER
	IF (NMIN.LT.0) CALL NEWPEN(ILINE(1))
	IF (JFF.EQ.0) THEN
	    CALL PLT3D(A,INX,INZ,NX,NZ,W2(NW),NW1D,W2,NW2D,ALPHA,
     $		180.+BETA,-XLEN,XP,ZLEN,YP,YSCALE,0.,IERR)
	ELSE
	    CALL HLT3D(A,INX,INZ,NX,NZ,W2,NW1D,W2,NW2D,ALPHA,
     $		180.+BETA,-XLEN,XP,ZLEN,YP,YSCALE,0.,IERR)
	ENDIF
	IF (IERR.NE.0) GOTO 42
C
C	IF WE ARE SHOWING BACK PANEL, THEN PLOT THE PORTION UNDER SURFACE
C
	IF (IAF.NE.2.AND.IAXIS.NE.0) THEN
		DY=1./YSCALE
		IF (NYT.GT.0) THEN 	!PLOT Y AXIS
			IF (IAFF.EQ.1) THEN
			  N1=INT(TY)	! MAJOR AXIS TICKS
			ELSE
			  N1=IFIX(YLEN+.5)+1
			ENDIF
			IF (IAF.EQ.0.OR.IAF.EQ.4.OR.IAF.EQ.5) THEN
			  IF (JF.EQ.2) CALL PLOT(FLOAT(ICOL(5)),0.,0)
				IF (NMIN.LT.0) CALL NEWPEN(1)
				VAL2=(N1-1)*DY+AMIN
				W2(  NW)=XFORM(1,NZ,VAL2)
				W2(1+NW)=YFORM(1,NZ,VAL2)
				W2(2+NW)=XFORM(1,1,VAL2)
				W2(3+NW)=YFORM(1,1,VAL2)
				W2(4+NW)=XFORM(NX,1,VAL2)
				W2(5+NW)=YFORM(NX,1,VAL2)
			CALL NXTVU(-2,W2(NW),3,W2,NW2D,IERR)
				IF (IERR.NE.0) GOTO 42
				DO 338 K=1,N1-1
				 VAL1=(N1-K-1)*DY+AMIN
				 W2(  NW)=XFORM(1,NZ,VAL2)
				 W2(1+NW)=YFORM(1,NZ,VAL2)
				 W2(2+NW)=XFORM(1,NZ,VAL1)
				 W2(3+NW)=YFORM(1,NZ,VAL1)
				 W2(4+NW)=XFORM(1,1,VAL1)
				 W2(5+NW)=YFORM(1,1,VAL1)
				 W2(6+NW)=XFORM(1,1,VAL2)
				 W2(7+NW)=YFORM(1,1,VAL2)
			CALL NXTVU(-2,W2(NW),4,W2,NW2D,IERR)
				 IF (IERR.NE.0) GOTO 42
				 W2(  NW)=XFORM(1,1,VAL1)
				 W2(1+NW)=YFORM(1,1,VAL1)
				 W2(2+NW)=XFORM(NX,1,VAL1)
				 W2(3+NW)=YFORM(NX,1,VAL1)
				 W2(4+NW)=XFORM(NX,1,VAL2)
				 W2(5+NW)=YFORM(NX,1,VAL2)
			CALL NXTVU(-2,W2(NW),3,W2,NW2D,IERR)
				 IF (IERR.NE.0) GOTO 42
338				CONTINUE
			ENDIF
		ENDIF
	ENDIF
C
C	PLOT UPPER SIDE OF SURFACE
C
	IF (JF.EQ.2) CALL PLOT(FLOAT(ICOL(6)),0.,0)	!COLOR SURFACE UPPER
	IF (NMIN.LT.0) CALL NEWPEN(1)
	IF (JFF.EQ.0) THEN
	    CALL PLT3D(A,INX,INZ,NX,NZ,W2(NW),NW1D,W2,NW2D,ALPHA,
     $		180.+BETA,XLEN,XP,ZLEN,YP,YSCALE,0.,IERR)
	ELSE
	    CALL HLT3D(A,INX,INZ,NX,NZ,W2,NW1D,W2,NW2D,ALPHA,
     $		180.+BETA,XLEN,XP,ZLEN,YP,YSCALE,0.,IERR)
	ENDIF
	IF (IERR.NE.0) GOTO 42
	IF (IAF.NE.2.AND.IAXIS.NE.0) THEN
		NADD=0
		IF (JF.EQ.2) THEN
			NADD=100000
			IC(1)=ICOL(1)
			IC(2)=ICOL(2)
			IC(3)=ICOL(3)
			IC(4)=ICOL(4)
		ENDIF
		XP=XFORM(NX,NZ,AMIN)
		YP=YFORM(NX,NZ,AMIN)
		XP1=XFORM(1,NZ,AMIN)
		YP1=YFORM(1,NZ,AMIN)
		ANG=ATAN2(YP-YP1,XP-XP1)*180./TPI
		ZLEN1=SQRT((XP-XP1)**2+(YP-YP1)**2)
		IF (NXT.GT.0) THEN	! PLOT X AXIS
			IF (IAFF.EQ.1) THEN
			  CALL AXIS3(XP1,YP1,XT,-NADD-NXT-NLAB,ZLEN1,
     $				ANG,XASTART,XAEND,TX,
     $					TSX,FDX,IC)
			ELSE
			  VAL1=INT(XLEN+.5)+1.
			  CALL AXIS3(XP1,YP1,XT,-NADD-NXT-NLAB,ZLEN1,
     $				ANG,XASTART,XAEND,VAL1,
     $					0.15,5.02,IC)
			ENDIF
		ENDIF
		XP1=XFORM(NX,1,AMIN)
		YP1=YFORM(NX,1,AMIN)
		ANG=ATAN2(YP1-YP,XP1-XP)*180./TPI
		ZLEN1=SQRT((XP1-XP)**2+(YP1-YP)**2)
		IF (NZT.GT.0) THEN		! PLOT Z AXIS
			IF (IAFF.EQ.1) THEN
			  CALL AXIS3(XP,YP,ZT,-NADD-NZT-NLAB,ZLEN1,
     $				ANG,ZAEND,ZASTART,TZ,
     $					TSZ,FDZ,IC)
			ELSE
			  VAL1=INT(ZLEN+.5)+1.
			  CALL AXIS3(XP,YP,ZT,-NZT-NLAB,ZLEN1,
     $				ANG,ZAEND,ZASTART,VAL1,
     $					0.15,5.02,IC)
			ENDIF
		ENDIF
C
C	PLOT Y AXISES FOR MESH SURFACE
C
		DY=1./YSCALE
		XP1=XFORM(NX,NZ,AMAX)
		YP1=YFORM(NX,NZ,AMAX)
		ZLEN1=SQRT((XP1-XP)**2+(YP1-YP)**2)
		IF (NYT.GT.0) THEN 	!PLOT Y AXIS
			XP=XFORM(1,NZ,AMIN)	! LEFT SIDE
			YP=YFORM(1,NZ,AMIN)
			XP1=XFORM(NX,1,AMIN)	! RIGHT SIDE
			YP1=YFORM(NX,1,AMIN)
			IF (IAFF.EQ.1) THEN
			  IF (IAFFF.NE.2)
     $			    CALL AXIS3(XP,YP,YT,NYT+NADD,ZLEN1,
     $				90.,AMIN,AMAX,TY,
     $				TSY,FDY,IC)
			  IF (IAFFF.NE.1)
     $			    CALL AXIS3(XP1,YP1,YT,-NADD-NYT,ZLEN1,
     $				90.,AMIN,AMAX,TY,
     $				TSY,FDY,IC)
			  N1=INT(TY)	! MAJOR AXIS TICKS
			ELSE
			  VAL1=INT(YLEN+.5)+1.
			  IF (IAFFF.NE.2)
     $			    CALL AXIS3(XP,YP,YT,NADD+NYT,ZLEN1,
     $				90.,AMIN,AMAX,VAL1,0.15,5.02,IC)
			  IF (IAFFF.NE.1)
     $			    CALL AXIS3(XP1,YP1,YT,-NADD-NYT,ZLEN1,
     $				90.,AMIN,AMAX,VAL1,0.15,5.02,IC)
			  N1=IFIX(YLEN+.5)+1
			ENDIF
C
C	PLOT BACK PANEL FOR MESH SURFACE
C
			IF (IAF.EQ.0.OR.IAF.EQ.4.OR.IAF.EQ.5) THEN
			IF (JF.EQ.2) CALL PLOT(FLOAT(ICOL(5)),0.,0)
				DO 4338 K=1,N1
				 VAL1=(K-1)*DY+AMIN
				 W2(  NW)=XFORM(1,NZ,AMIN)
				 W2(1+NW)=YFORM(1,NZ,AMIN)
				 W2(2+NW)=XFORM(1,NZ,VAL1)
				 W2(3+NW)=YFORM(1,NZ,VAL1)
				 W2(4+NW)=XFORM(1,1,VAL1)
				 W2(5+NW)=YFORM(1,1,VAL1)
				 W2(6+NW)=XFORM(1,1,AMIN)
				 W2(7+NW)=YFORM(1,1,AMIN)
			CALL NXTVU(2,W2(NW),4,W2,NW2D,IERR)
				 IF (IERR.NE.0) GOTO 42
				 W2(  NW)=XFORM(1,1,VAL1)
				 W2(1+NW)=YFORM(1,1,VAL1)
				 W2(2+NW)=XFORM(NX,1,VAL1)
				 W2(3+NW)=YFORM(NX,1,VAL1)
				 W2(4+NW)=XFORM(NX,1,AMIN)
				 W2(5+NW)=YFORM(NX,1,AMIN)
			CALL NXTVU(2,W2(NW),3,W2,NW2D,IERR)
				 IF (IERR.NE.0) GOTO 42
4338				CONTINUE
			ENDIF
		ENDIF
	ENDIF
C
C	DRAW AXES FOR CONTOUR PLOT
C
	IF (NLEV.EQ.0) GOTO 900
	B4=B4-CLOW
	IF ((IAF.LT.3.OR.IAF.EQ.5).AND.IAXIS.NE.0) THEN
		NADD=0
		IF (JF.EQ.2) THEN
			NADD=100000
			IC(1)=ICOL(1)
			IC(2)=ICOL(2)
			IC(3)=ICOL(3)
			IC(4)=ICOL(4)
		ENDIF
		XP=XFORM(NX,NZ,AMIN)
		YP=YFORM(NX,NZ,AMIN)
		XP1=XFORM(1,NZ,AMIN)
		YP1=YFORM(1,NZ,AMIN)
		ANG=ATAN2(YP-YP1,XP-XP1)*180./TPI
		ZLEN1=SQRT((XP-XP1)**2+(YP-YP1)**2)
		IF (NXT.GT.0) THEN	! PLOT X AXIS
			IF (IAFF.EQ.1) THEN
			  CALL AXIS3(XP1,YP1,XT,-NADD-NXT,ZLEN1,
     $					ANG,XASTART,XAEND,TX,
     $					TSX,FDX,IC)
			ELSE
			  VAL1=INT(XLEN+.5)+1.
			  CALL AXIS3(XP1,YP1,XT,-NADD-NXT,ZLEN1,
     $					ANG,XASTART,XAEND,VAL1,
     $					0.15,5.02,IC)
			ENDIF
		ENDIF
		CALL PLOT(XP1,YP1,3)
		XP1=XFORM(1,1,AMIN)
		YP1=YFORM(1,1,AMIN)
		CALL PLOT(XP1,YP1,2)
		XP1=XFORM(NX,1,AMIN)
		YP1=YFORM(NX,1,AMIN)
		CALL PLOT(XP1,YP1,2)
		ANG=ATAN2(YP1-YP,XP1-XP)*180./TPI
		ZLEN1=SQRT((XP1-XP)**2+(YP1-YP)**2)
		IF (NZT.GT.0) THEN		! PLOT Z AXIS
			IF (IAFF.EQ.1) THEN
			  CALL AXIS3(XP,YP,ZT,-NADD-NZT,ZLEN1,
     $				ANG,ZAEND,ZASTART,TZ,
     $					TSZ,FDZ,IC)
			ELSE
			  VAL1=INT(ZLEN+.5)+1.
			  CALL AXIS3(XP,YP,ZT,-NADD-NZT,ZLEN1,
     $				ANG,ZAEND,ZASTART,VAL1,
     $					0.15,5.02,IC)
			ENDIF
		ENDIF
	ELSE
C
C	BOX CONTOUR PLOT AREA
C
		IF (JF.EQ.2) CALL PLOT(FLOAT(ICOL(1)),0.,0)
		XP=XFORM(NX,NZ,AMIN)
		YP=YFORM(NX,NZ,AMIN)
		CALL PLOT(XP,YP,3)
		XP1=XFORM(1,NZ,AMIN)
		YP1=YFORM(1,NZ,AMIN)
		CALL PLOT(XP1,YP1,2)
		XP1=XFORM(1,1,AMIN)
		YP1=YFORM(1,1,AMIN)
		CALL PLOT(XP1,YP1,2)
		XP1=XFORM(NX,1,AMIN)
		YP1=YFORM(NX,1,AMIN)
		CALL PLOT(XP1,YP1,2)
		CALL PLOT(XP,YP,2)
	ENDIF
C
C	CALL CONTOURING ROUTINE ONCE FOR EACH CONTOUR LEVEL 
C
	B4=B4+B3*AMIN
	AE=1.E20
	ICL=0
	IF (NMIN.LT.0) ICL=2
	NL=IABS(NLEV)
	DO 100 IX=1,NL
		IF (NLEV.LT.1) THEN		! COMPUTE LEVELS
			CVAL(IX)=(IX-1)*(AMAX-AMIN)/(NL-1)+AMIN
		ELSE IF (NLEV.EQ.-1) THEN
			CVAL(IX)=AMIN
		ENDIF
		CV=CVAL(IX)
		IF (JF.EQ.2) CALL PLOT(FLOAT(ICOL(IX+8)),0.,0)	! COLOR
		IF (ICL.NE.0) ILL=ILINE(IX+2)			! LINE TYPE
		CALL GCONTR(A,INX,INZ,NX,NZ,1.,1.,CV,-IX-64,AE,W2,
     $			NCH,-0.12,IABS(NMIN),0,ICL,ILL)
100	CONTINUE
C
C	NOW DRAW INTERCONNECTING PATH LINES
C
	IF (IPLS(1).NE.0) THEN
		IF (JF.EQ.2) CALL PLOT(FLOAT(ICOL(8)),0.,0)	! COLOR
		IF (ICL.NE.0) CALL NEWPEN(ILINE(2))		! LINE TYPE
		ILL=1
		ILAST=1
		JLAST=1
150		CONTINUE
		I=(ILL-1)*3+1
		IF (IPLS(I).LE.0) GOTO 900
		IF (IPLS(I).EQ.2) THEN
			I1=ILAST
			J1=JLAST
			X1=XFORM(I1,J1,A(I1,J1)-AMIN)
			Y1=YFORM(I1,J1,A(I1,J1)-AMIN)+CLOW
			CALL PLOT(X1,Y1,3)
			I1=IPLS(I+1)
			J1=IPLS(I+2)
			X1=XFORM(I1,J1,A(I1,J1)-AMIN)
			Y1=YFORM(I1,J1,A(I1,J1)-AMIN)+CLOW
			CALL PLOT(X1,Y1,2)
			I1=ILAST
			J1=JLAST
			X1=XFORM(I1,J1,0.)
			Y1=YFORM(I1,J1,0.)
			CALL PLOT(X1,Y1,3)
			I1=IPLS(I+1)
			J1=IPLS(I+2)
			X1=XFORM(I1,J1,0.)
			Y1=YFORM(I1,J1,0.)
			CALL PLOT(X1,Y1,2)
		ENDIF
		I1=IPLS(I+1)
		J1=IPLS(I+2)
		X1=XFORM(I1,J1,A(I1,J1)-AMIN)
		Y1=YFORM(I1,J1,A(I1,J1)-AMIN)+CLOW
		CALL PLOT(X1,Y1,3)
		X1=XFORM(I1,J1,0.)
		Y1=YFORM(I1,J1,0.)
		CALL PLOT(X1,Y1,2)
		ILAST=IPLS(I+1)
		JLAST=IPLS(I+2)
		ILL=ILL+1
		GOTO 150
	ENDIF
C
C	FINISH UP
C
900	CALL PLOT(0.,0.,3)			!PEN UP
	IF (IFLAG.GT.0) THEN
		CALL CTERM(2)			!CLEAR TERMINAL
		CALL PLOTND			!CLOSE PLOT OUTPUT
		REPEAT=.FALSE.
	ENDIF
	IF (IFLAG.LT.0) THEN
		REPEAT=.TRUE.
		CALL CTERM(1)			!PUT TERMINAL IN TEXT MODE
	ENDIF
	RETURN
C
42	CALL CTERM(1)
	WRITE(*,1) IERR
1	FORMAT(' *** ERROR CALLING PLT3D/HLT3D IN CVAX3DX *** '/
     $		' *** INTERNAL WORKING SPACE EXCEEDED ***',I2)
	RETURN
	END
