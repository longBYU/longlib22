C
C *** LAST REVISED ON  4-JAN-1994 10:29:22.54
C *** SOURCE FILE: [LONGLIB93.SOURCES.FORTRAN.MASTER]CNTLN.FOR
C *******************************************************************
C
	SUBROUTINE CNTLN(X,Y,Z,N,XH,YH,IFLAG,NCNTRS,CLIST,IAXIS,
     $		XT,NXT,TX,TSX,FSX,YT,NYT,TY,TSY,FSY,
     $		T,NT,XAST,XAEN,YAST,YAEN,ICOL,ILINE)
C
C	CREATED BY D. LONG     FEB, 1986	AT JPL
C
C	ROUTINE TO PLOT DATA CONTOURS SPECIFIED AS (X,Y,Z) TRIPLES 
C
C	X,Y,Z	(R) ARRAYS CONTAINING DATA POINTS
C	N	(I) NUMBER OF DATA POINTS
C	XH,YH   (R) LENGTH OF EACH AXIS (INCHES)
C	IFLAG	(I) PLOT FLAG
C		>10000	REPEAT PLOTTING BUT DO NOT INTIALIZE PLOTTER
C		< 0	REPEAT PLOTTING (DON'T CLOSE PLOTTER OUTPUT)
C		= 0	CLOSE PLOTTER OUTPUT--DO NOT PRODUCE PLOT
C		> 0	SINGLE PLOT OUTPUT ONLY (PLOTTER OUTPUT CLOSED)
C 	(ONE'S DIGIT) = 1 DO NOT USE COLOR ARRAY OR LINE TYPE ARRAY
C		      = 2 USE COLOR ARRAY BUT NOT LINE TYPE ARRAY
C		      = 3 DO NOT USE COLOR ARRAY BUT USE LINE TYPE ARRAY
C		      = 4 USE COLOR ARRAY AND LINE TYPE ARRAY
C 	(TEN'S DIGIT) = 0 JUST X,Y AXES
C		      = 1 X AND Y AXES IN A BOX
C 	(HUNDRED'S)   = 0 ASK WHICH SCREEN DEVICE TO USE
C		      <>0 SCREEN DEVICE CODE NUMBER
C	NCNTRS	(I) NUMBER OF CONTOUR LINES TO BE DRAWN
C		    (SELF COMPUTING IF NCNTRS.LE.0)
C	CLIST   (R) ARRAY OF CONSTANT CONTOUR VALUES IF NCNTRS > 0
C		NOTE: IF NCNTRS <= 0, THEN CLIST(1) = BASE VALUE,
C		AND CLIST(2) = INCREMENT VALUE (DELTA)
C 	IAXIS	(I) AXIS OPTION FLAG
C			< 0 DO NOT PLOT AXES
C 	(ONE'S DIGIT)	= 1 PLOT Y AXIS USING COMPUTED SCALE
C			= 2 PLOT Y AXIS USING COMPUTED, SMOOTHED SCALE
C			= 3 PLOT Y AXIS USING INPUT SCALE--VARIABLES ACCESSED
C			= 4 PLOT Y AXIS USING INPUT, SMOOTHED SCALE--VARIABLES ACCESSED
C 	(TEN'S DIGIT)	= 1 PLOT X AXIS USING COMPUTED SCALE
C			= 2 PLOT X AXIS USING COMPUTED, SMOOTHED SCALE
C			= 3 PLOT X AXIS USING INPUT SCALE--VARIABLES ACCESSED
C			= 4 PLOT X AXIS USING INPUT, SMOOTHED SCALE--VARIABLES ACCESSED
C	(HUNDRED'S)	= 0 NORMAL
C			= 1 TRIANGULATION ONLY PLOTTED
C 	XT,YT	(B) STRINGS FOR AXIS TITLES
C 	NXT,NYT	(I) LENGTH OF AXIS TITLES
C		     IF ZERO THEN AXIS NOT PLOTTED
C		     IF LESS THAN ZERO THEN AXIS TICKS ARE OPPOSITE AXIS TITLE
C FOLLOWING ONLY ACCESSED IF IAXIS > 0
C	TX,TY	(R) NUMBER OF TICK MARKS (SEE AXIS3)
C	TSX,TSY	(R) SIZE OF TITLE AND NUMBERS OF AXIS
C			  IF LESS THAN ZERO DO NOT AUTO-SCALE BY (x10^POWER)
C	FSX,FSY	(R) NUMBER FORMAT OF AXISES (SEE AXIS3)
C	T	(B) PLOT TITLE
C	NT	(I) NUMBER OF CHARACTERS IN TITLE
C			IF NT=0 NO TITLE PLOTTED
C 	XAST,YAST(R) AXIS START VALUES
C 	XAEN,YAEN(R) AXIS END VALUES
C	ICOL	(I) COLOR INDEX TABLE (ACCESSED IF 1'S DIGIT OF IFLAG=2
C			ICOL(1) AXIS LINE COLOR
C			ICOL(2) AXIS NUMERIC LABEL COLOR
C			ICOL(3) AXIS LABEL COLOR
C			ICOL(4) AXIS EXPONENT COLOR
C			ICOL(5) TITLE COLOR
C			ICOL(6) SURFACE COLOR
C	ILINE	(I) LINE TYPE ARRAY
C
C	EXTERNAL CALLS:
C
C		INTERPC
C		TRIANGC
C		  MIDC (FUNCTION)
C		CNTOUR
C		  CNTCRV
C ---------------------------------------------------------------------
C
	DIMENSION X(*),Y(*),Z(*)
	DIMENSION CLIST(2),ICOL(*),ILINE(*),IC(4)
	CHARACTER*(*) XT,YT,T
	LOGICAL REPEAT
	SAVE REPEAT	
C
	DIMENSION PAS(2)
	PARAMETER (NZZ=2000)
	PARAMETER (NW=1200)
	PARAMETER (NZ=NZZ+NW-6)
	DIMENSION IT(NZZ,3),IP(NW),IB(NW)
	DIMENSION  IE(NZ,2),ITE(NZ,4),XI(NZ),ETA(NZ),
     *		LAMBDA(NZ),IBE(NZ)
C
	COMMON /CCNTRPLT/XMIN,DXR,YMIN,DYR
	SAVE /CCNTRPLT/
	DATA REPEAT/.FALSE./
C
	IF (N.GT.NW) THEN
		CALL CTERM(1)
		WRITE(*,3010)
3010		FORMAT(' *** WARNING: INSUFFICIENT WORKING SPACE')
		CALL CTERM(-1)
	ENDIF
C
	IF (IFLAG.EQ.0) THEN
		IF (REPEAT) CALL PLOTND	!CLOSE PLOTTER
		REPEAT=.FALSE.
		RETURN
	ENDIF
C
	XLEN=ABS(XH)
	YLEN=ABS(YH)
	IYAXIS=MOD(IABS(IAXIS),10)
	IXAXIS=MOD(IABS(IAXIS),100)/10
	ITRIANG=MOD(IABS(IAXIS),1000)/100
	IF (IXAXIS.GT.2) THEN
		XMAX=XAEN
		XMIN=XAST
	ELSE
		XMAX=X(1)
		XMIN=X(1)
		DO 16 I=1,N
			XMAX=AMAX1(XMAX,X(I))
			XMIN=AMIN1(XMIN,X(I))
16		CONTINUE
	ENDIF
	IF (IXAXIS.EQ.2.OR.IXAXIS.EQ.4) THEN
		PAS(1)=XMAX
		PAS(2)=XMIN
		CALL SCALE(PAS,XLEN,2,1,1,XMIN,DAA)
		XMAX=YLEN*DAA+XMIN
	ENDIF
C
	IF (IYAXIS.GT.2) THEN
		YMAX=YAEN
		YMIN=YAST
	ELSE
		YMAX=Y(1)
		YMIN=Y(1)
		DO 17 I=1,N
			YMAX=AMAX1(YMAX,Y(I))
			YMIN=AMIN1(YMIN,Y(I))
17		CONTINUE
	ENDIF
	IF (IYAXIS.EQ.2.OR.IYAXIS.EQ.4) THEN
		PAS(1)=YMAX
		PAS(2)=YMIN
		CALL SCALE(PAS,YLEN,2,1,1,YMIN,DAA)
		YMAX=YLEN*DAA+YMIN
	ENDIF
C
C	INTIALIZE PLOT PACKAGE
C
	JF=IABS(IFLAG)
	IF (.NOT.REPEAT.AND.JF.LT.10000) THEN
		ILU=MOD(JF,10000)/100
		CALL FRAME(3,ILU,1.5,0.65,1.)		!INTIALIZE
	ELSE
		CALL CTERM(-1)				!PUT TERMINAL
 	ENDIF
	JFF=MOD(JF,100)/10
	JF=MOD(JF,10)
C
	IF (IAXIS.GT.0) THEN				!PLOT AXIS LABELS
		NADD=0
		IF (JF.EQ.2.OR.JF.EQ.4) THEN
			NADD=100000
			IC(1)=ICOL(1)
			IC(2)=ICOL(2)
			IC(3)=ICOL(3)
			IC(4)=ICOL(4)
		ENDIF
		IF (NXT.NE.0) THEN 	!PLOT X AXIS
			CALL AXIS3(0.,0.,XT,-NADD-IABS(NXT),
     $				XLEN*ISIGN(1,NXT),
     $				0.,XMIN,XMAX,TX,TSX,FSX,IC)
			IF (JFF.EQ.1) CALL AXIS3(XLEN,0.,XT,
     $				NADD+101,XLEN*ISIGN(1,NXT),0.,
     $				XMIN,XMAX,TX,TSX,FSX,IC)
		ENDIF
		IF (NYT.NE.0) THEN 	!PLOT Y AXIS
			CALL AXIS3(0.,0.,YT,IABS(NYT)+1000+NADD,
     $				YLEN*ISIGN(1,NYT),
     $				90.,YMIN,YMAX,TY,TSY,FSY,IC)
			IF (JFF.EQ.1) CALL AXIS3(0.,0.,YT,101+NADD,
     $				YLEN*ISIGN(1,NYT),
     $				90.,YMIN,YMAX,TY,TSY,FSY,IC)
		ENDIF
	ENDIF
C
C	ADD TITLE
C
	IF (JF.EQ.2.OR.JF.EQ.4) CALL PLOT(FLOAT(ICOL(5)),0.,0) ! COLOR
	IF (NT.GT.0) THEN
		X1=0.0
		Y1=0.0
		CALL SYMBOL(X1,Y1,0.25,T,0.,NT,-3)	! TITLE LENGTH
		X1=(XLEN-X1)/2.
		CALL SYMBOL(X1,YLEN+.1,0.25,T,0.,NT,-1)	! PLOT TITLE
	ENDIF
C
C	BEGIN SURFACE PLOTTING
C
	DX=1.0
	DY=1.0
	IF (XMAX-XMIN.NE.0.0) DX=XLEN/(XMAX-XMIN)
	IF (YMAX-YMIN.NE.0.0) DY=YLEN/(YMAX-YMIN)
C
C CALL ROUTINE TRAING TO TRIANGULATE X-Y DATA POINTS
C
	CALL TRIANGC(X,Y,N,IT,NZZ,M,IP,IB,NW,LEDGES,NZ,IE,IBE,ITE)
C
C	PLOT TRIANGULATED SURFACE IF DESIRED
C
	DXR=1./DX
	DYR=1./DY
	IF (ITRIANG.EQ.1) THEN
		DO 35 I=1,M
			IPP=3
			DO 33 J=1,3
				L=IT(I,J)
				X1=DX*(X(L)-XMIN)
				Y1=DY*(Y(L)-YMIN)
				CALL PLOT(X1,Y1,IPP)
				IPP=2
33			CONTINUE
			L=IT(I,1)
			X1=DX*(X(L)-XMIN)
			Y1=DY*(Y(L)-YMIN)
			CALL PLOT(X1,Y1,2)
35		CONTINUE
		GOTO 300
	ENDIF
C
C DETERMINE THE RANGE OF THE Z DATA UNDER CONSIDERATION
C
  	ZMIN = Z(1)
	ZMAX = ZMIN
	DO 50 K=2,N
		ZMIN = AMIN1(ZMIN,Z(K))
		ZMAX = AMAX1(ZMAX,Z(K))
   50	CONTINUE
	K=0
C
C HAS A CONTOUR LIST BEEN GIVEN? . .
C
	K=0
	FK = -1.0
  200	IF (NCNTRS.GT.0) GOTO 180
C
C DETERMINE (NEXT) CONTOUR CONSTANT VALUE
C
  210	FK = FK+1.0
	ZCON = FK*CLIST(2) + CLIST(1)
	IF (ZCON.GT.ZMIN.AND.ZCON.LT.ZMAX) GOTO 150
	IF (ZCON.GT.ZMAX.AND.CLIST(2).GE.0.) GOTO 300
	IF (ZCON.LT.ZMIN.AND.CLIST(2).LE.0.) GOTO 300
	GOTO 210
C
  180	K = K+1
	IF (K.GT.NCNTRS) GOTO 300
	ZCON = CLIST(K)
	IF (ZCON.LT.ZMIN.OR.ZCON.GT.ZMAX) GOTO 200
C
C CALL ROUTINE INTERPC TO
C INTERPOLATE FOR CONTOUR LINE DATA POINTS
C
  150	CALL INTERPC(X,Y,Z,N,ZCON,LEDGES,IE,LAMBDA,XI,ETA,J,NZ)
C
C ANY DATA POINTS FOUND? . .
C CALL ROUTINE CNTOUR TO SORT THE INTERPOLATED POINTS
C ON THE CONTOUR LINE AND DRAW IT
C
	IF (JF.EQ.2.OR.JF.EQ.4) CALL PLOT(FLOAT(ICOL(K+5)),0.,0)! COLOR
	IF (JF.EQ.3.OR.JF.EQ.4) CALL NEWPEN(ILINE(K))		! LINE TYPE
	IF (J.NE.0) CALL CNTOUR(ZCON,XI,ETA,LAMBDA,J,IBE,ITE,NZ,
     $		DX,XMIN,DY,YMIN)
	GOTO 200
C
C	FINISH ROUTINE
C
  300	CALL PLOT(0.,0.,3)			!PEN UP
	IF (JF.EQ.3.OR.JF.EQ.4) CALL NEWPEN(1)	!RESET LINE TYPE
	IF (IFLAG.GT.0) THEN
		CALL CTERM(2)			!CLEAR TERMINAL
		CALL PLOTND			!CLOSE PLOT OUTPUT
		REPEAT=.FALSE.
	ENDIF
	IF (IFLAG.LT.0) THEN
		REPEAT=.TRUE.
		CALL CTERM(1)			!PUT TERMINAL TEXT MODE
	ENDIF
	RETURN
	END
C
C
