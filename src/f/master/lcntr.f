C
C *** LAST REVISED ON  8-DEC-1993 07:15:03.69
C *** SOURCE FILE: [LONGLIB93.SOURCES.FORTRAN.MASTER]MLIB2.FOR
C
	SUBROUTINE LCNTR(V,NDX,NDY,NX,NY,NLEVELS,CVAL,NCH,
     1		NMIN,IFLAG,WORK,
     2		XAXL,YAXL,XTITL,NXT,YTITL,NYT,
     3		TITLE,NT,XMIN,XMAX,YMIN,YMAX,ICOL,ILINE)
C
C	CREATED BY D. LONG    MAY, 1986	AT JPL
C
C	MASTER ROUTINE TO PLOT A CONTOUR PLOT WITH LOG/LINEAR AXIS
C	THIS ROUTINE PLOTS CONTINUOUS CONTOURS AND CAN LABEL THEM
C	USING GCONTR
C
C	V	REAL DATA VALUE ARRAY DIMENSIONED V(NDX,NDY)
C	NDX,NDY	INT  DIMENSIONS OF V
C	NX	INT  NUMBER OF X VALUES
C	NY	INT  NUMBER OF Y VALUES
C	NLEVELS REAL NUMBER OF CONTOUR LEVELS
C			< 0 MIN(V) AND MAX(V) ARE USED WITH UNIFORM STEPS
C	CVAL	REAL ARRAY OF CONTOUR VALUES
C			IF NLEVELS < 0 THIS ARRAY IS FILLED WITH
C			THE VALUES USED FOR CONTOURS:
C			CVAL(J)=MIN(V)+(J-1)*(MAX(V)-MIN(V))/(J-1)
C	NCH	INT  LABELING OPTION FLAG
C			< 0 LABEL WITH CONTOUR VALUE (NCH IS NUMBER
C				OF DIGITS TO THE LEFT OF DECIMAL
C			= 0 NO LABELING OF CONTOURS
C			> 0 LABEL WITH LETTERS
C	NMIN	INT  MINIMUM NUMBER OF CELL FOR CONTOUR TO BE LABLED
C	IFLAG	INT
C		  (MAG) >10000 REPEAT PLOTTING BUT DO NOT INTIALIZE PLOTTER
C			< 0  REPEAT PLOTTING (DON'T CLOSE PLOTTER OUTPUT)
C			= 0  CLOSE PLOTTER OUTPUT--DO NOT PRODUCE PLOT
C			> 0  SINGLE PLOT OUTPUT ONLY (PLOTTER OUTPUT CLOSED)
C				NOTE: AXIS MAY BE LOG, BUT POINTS ARE PLOTTED 
C				      LINEARILY SPACED
C	  (ONE'S DIGIT) = 1 X AXIS LINEAR, Y AXIS LOGRITHMIC (BASE 10)
C	  (ONE'S DIGIT) = 2 X AXIS LOGRITHMIC,Y AXIS LINEAR
C	  (ONE'S DIGIT) = 3 X AXIS LOGRITHMIC,Y AXIS LOGRITHMIC
C	  (ONE'S DIGIT) = 4 X AXIS LINEAR, Y AXIS LINEAR
C	  (TEN'S DIGIT) = 0 NO GRID OR AXIS
C	  (TEN'S DIGIT) = 1 PLOT BOX WITH AXIS TICKS
C	  (TEN'S DIGIT) = 2 PLOT SOLID CARTESIAN GRID
C	  (TEN'S DIGIT) = 3 PLOT TICKED CARTESIAN GRID W/O BOX
C	  (TEN'S DIGIT) = 4 PLOT TICKED CARTESIAN GRID WITH BOX
C	  (TEN'S DIGIT) = 5 PLOT BOX WITH AXIS TICKS AND TICKED CARTESIAN GRID
C	  (TEN'S DIGIT) = 6 PLOT W/O BOX OR GRID BUT INCLUDE AXISES
C	  (TEN'S DIGIT) = 7 PLOT SOLID LOGARITHMIC GRID 
C	  (TEN'S DIGIT) = 8 PLOT DOTTED LOGARITHMIC GRID 
C	  (TEN'S DIGIT) = 9 PLOT TICKED LOGARITHMIC GRID 
C     (HUNDRED'S DIGIT) = 0 ASK WHICH SCREEN DEVICE TO USE
C		      <>0 SCREEN DEVICE CODE NUMBER
C	WORK	INT   WORKING ARRAY DIMENSIONED AT LEAST (2*NX*NY+1)/31
C	XAXL	REAL  X AXIS LENGTH IN INCHES
C			> 0  USE INPUT VALUE AXIS SCALING
C			< 0  USE SMOOTHED AXIS SCALING
C	YAXL	REAL  Y AXIS LENGTH IN INCHES
C			> 0  USE INPUT VALUE SCALING
C			< 0  USE SMOOTHED AXIS SCALING
C	XTITL	CHAR  X AXIS TITLE
C	NXT	INT   NUMBER OF CHARACTERS IN X AXIS TITLE STRING
C			< 0  TICKS ON INSIDE OF AXIS
C			= 0  NO AXIS
C			> 0  TICKS ON TITLE SIDE OF AXIS
C	YTITL	CHAR  Y AXIS TITLE
C	NYT	INT   NUMBER OF CHARACTERS IN Y AXIS TITLE STRING
C			< 0  TICKS ON INSIDE OF AXIS
C			= 0  NO AXIS
C			> 0  TICKS ON TITLE SIDE OF AXIS
C	TITLE	CHAR  PLOT TITLE
C	NT	INT   NUMBER OF CHARACTERS IN PLOT TITLE
C			= 0  NO TITLE
C			< 0  USE PEN COLOR ARRAY
C			IF ABS(NT)/100 > 0 THEN USE LINE TYPE ARRAY
C	XMIN	REAL  MINIMUM VALUE DISPLAYED ON X AXIS
C	XMAX	REAL  MAXIMUM VALUE DISPLAYED ON X AXIS
C	YMIN	REAL  MINIMUM VALUE DISPLAYED ON Y ARRAY
C	YMAX	REAL  MAXIMUM VALUE DISPLAYED ON Y ARRAY
C	ICOL	INT   ARRAY OF PEN COLORS DIMENSIONED ICOL(5+NLEVELS)
C			ICOL(1) = GRID COLOR
C			ICOL(2) = AXIS LINE COLOR
C			ICOL(3) = AXIS NUMBERS COLOR
C			ICOL(4) = AXIS TITLE COLOR
C			ICOL(5) = AXIS EXPONENT COLOR
C			ICOL(6) = TITLE COLOR (COLOR UPON RETURN)
C			ICOL(7) = CONTOUR LEVEL 1
C			ICOL(8) = CONTOUR LEVEL 2
C			   .        .      .   
C			ICOL(6+NLEVELS) = CONTOUR LEVEL NLEVELS (= AEND)
C	ILINE	INT  ARRAY OF PEN TYPES FOR CONTOURS
C
	CHARACTER*(*) XTITL,YTITL,TITLE
	REAL V(NDX,NDY),PY(2),CVAL(*)
	LOGICAL REPEAT
	INTEGER PL,ICOL(*),ILINE(*),IC(4)
	COMMON /CCNTRPLT/XM,DX,YM,DY
	SAVE /CCNTRPLT/,REPEAT
	DATA REPEAT/.FALSE./
C
	PL=3
	IF (IFLAG.EQ.0) THEN
		IF (REPEAT) CALL PLOTND !CLOSE PLOT PACKAGE
		REPEAT=.FALSE.
		RETURN
	ENDIF
	JF=IABS(IFLAG)
	IF (.NOT.REPEAT.AND.JF.LT.10000) THEN
		ILU=-(JF/100)			!SCREEN DEVICE, CLEAR SCREEN
		CALL FRAME(PL,ILU,1.2,1.2,1.)	!INTIALIZE PLOT PACKAGE
	ELSE
		CALL CTERM(-1)			!RESTORE PLOT MODE
		JF=MOD(JF,100)
	ENDIF
	JF=MOD(JF,100)
	IF=JF
	IF (IF.GT.10) IF=MOD(IF,10)
	JF=JF-IF
	NGX=int(ANINT(ABS(XAXL)))			!GRID SIZES
	NGY=int(ANINT(ABS(YAXL)))
	PY(1)=XMIN
	PY(2)=XMAX
	CALL SCALE(PY,ABS(XAXL),2,1,1,XM2,DX2)
	IF (IF.EQ.2.OR.IF.EQ.3) THEN
		CALL SCALG(PY,ABS(XAXL),2,1,1,XM,DX)	!SMOOTH SCALE FACTORS
		IK=-1
		GDX=1./DX
		NGX=int(DX*ABS(XAXL))
		INX=-1
	ELSE
		CALL SCALE(PY,ABS(XAXL),2,1,1,XM,DX)	!SMOOTH SCALE FACTORS
		IK=0
		GDX=1.
		INX=1
	ENDIF
	IF (XAXL.GT.0.0) THEN				!INPUT SCALING
		XM2=XMIN
		DX2=(XMAX-XMIN)/ABS(XAXL)
		IF (IF.EQ.2.OR.IF.EQ.3) THEN
			XM=ALOG10(ABS(XMIN)+1.E-25)
			IF (XM.NE.AINT(XM)) XM=AINT(XM)-1.
			DX=AINT(ALOG10(ABS(XMAX)+1.E-25))+1.
			DX=(DX-XM)/ABS(XAXL)
			GDX=1./DX
			NGX=int(DX*ABS(XAXL))
		ELSE
			XM=XMIN
			DX=(XMAX-XMIN)/ABS(XAXL)
			GDX=1.
		ENDIF
	ENDIF
	PY(1)=YMIN
	PY(2)=YMAX
	CALL SCALE(PY,ABS(YAXL),2,1,1,YM2,DY2)
	IF (IF.EQ.1.OR.IF.EQ.3) THEN
		CALL SCALG(PY,ABS(YAXL),2,1,1,YM,DY)	!SMOOTH SCALE FACTORS
		IK=-1+IK
		GDY=1./DY
		NGY=int(DY*ABS(YAXL))
		INY=-1
	ELSE
		CALL SCALE(PY,ABS(YAXL),2,1,1,YM,DY)	!SMOOTH SCALE FACTORS
		IK=1+IK
		GDY=1.
		INY=1
	ENDIF
	IF (YAXL.GT.0.0) THEN				!INPUT SCALING
		YM2=YMIN
		DY2=(YMAX-YMIN)/ABS(YAXL)
		IF (IF.EQ.1.OR.IF.EQ.3) THEN
			YM=ALOG10(ABS(YMIN)+1.E-25)
			IF (YM.NE.AINT(YM)) YM=AINT(YM)-1.
			DY=AINT(ALOG10(ABS(YMAX)+1.E-25))+1.
			DY=(DY-YM)/ABS(YAXL)
			GDY=1./DY
			NGY=int(DY*ABS(YAXL))
		ELSE
			YM=YMIN
			DY=(YMAX-YMIN)/ABS(YAXL)
			GDY=1.
		ENDIF
	ENDIF
	IF (JF.EQ.0) GOTO 77		!NO AXIS
	IF (JF.EQ.60) GOTO 76		!NO GRID
	IF (JF.GT.60) THEN		!LOGRITHMIC GRID
		II=0
		IF (JF.EQ.70) II=1
		IF (JF.EQ.80) II=2
		CALL LGRID(0.,0.,GDX,GDY,INX*NGX,INY*NGY,II)
		GOTO 76
	ENDIF
	IF (JF.GE.20) THEN		!CARTESIAN GRID
		IF (JF.GE.30) NGX=-NGX
		IF (JF.GE.40) NGY=-NGY
		IF (NT.LT.0) CALL PLOT(FLOAT(ICOL(1)),0.,0) !PEN COLOR
		CALL GRID(0.,0.,GDX,GDY,NGX,NGY)	!PRODUCE GRID
		IF (JF.EQ.50) JF=10
	ENDIF
76	NADD=0
	IF (NT.LT.0) THEN
		NADD=100000		!PEN COLOR
		IC(1)=ICOL(2)
		IC(2)=ICOL(3)
		IC(3)=ICOL(4)
		IC(4)=ICOL(5)
	ENDIF
	IX=IABS(NXT)
	XL=ABS(XAXL)*SIGN(1.,FLOAT(NXT))		!AXIS LENGTH WITH TICK INFOR
	IF (NXT.NE.0) THEN
		IF (IF.EQ.2.OR.IF.EQ.3) THEN
		CALL LGAXS(0.,0.,XTITL,-IX-NADD,XL,0.,XM,DX,IC) !X-AXIS
		IF (JF.EQ.10) CALL LGAXS(0.,ABS(YAXL),XTITL,IX+100+NADD,
     $			XL,0.,XM,DX,IC) !X-AXIS
		ELSE
		CALL AXIS(0.,0.,XTITL,-IX-NADD,XL,0.,XM,DX,N1,N2,IC)  !X-AXIS
		IF (JF.EQ.10) CALL AXIS(0.,ABS(YAXL),XTITL,IX+100+NADD,
     $			XL,0.,XM,DX,N1,N2,IC)  !X-AXIS
		ENDIF
	ENDIF
	IY=IABS(NYT)+1000
	YL=ABS(YAXL)*SIGN(1.,FLOAT(NYT))
	IF (NYT.NE.0) THEN
		IF (IF.EQ.1.OR.IF.EQ.3) THEN
		CALL LGAXS(0.,0.,YTITL,IY+NADD,YL,90.,YM,DY,IC) !Y-AXIS
		IF (JF.EQ.10) CALL LGAXS(ABS(XAXL),0.,YTITL,-IY-100-NADD,
     $			YL,90.,YM,DY,IC) !Y-AXIS
		ELSE
		CALL AXIS(0.,0.,YTITL,IY+NADD,YL,90.,YM,DY,N1,N2,IC)  !Y-AXIS
		IF (JF.EQ.10) CALL AXIS(ABS(XAXL),0.,YTITL,-IY-100-NADD,
     $			YL,90.,YM,DY,N1,N2,IC)	!Y-AXIS
		ENDIF
	ENDIF
C
77	CONTINUE
	NL=IABS(NLEVELS)
	IF (NL.EQ.0) NL=2
	AE=1.E20
	IF (NLEVELS.LE.0) THEN
		AE=V(1,1)
		AS=V(1,1)
		DO 65 IX=1,IABS(NX)
			DO 65 IY=1,NY
				AE=MAX(AE,V(IX,IY))
				AS=MIN(AS,V(IX,IY))
65		CONTINUE
		DO 66 IX=1,NL
			CVAL(IX)=AS+(IX-1)*(AE-AS)/FLOAT(NL-1)
66		CONTINUE
	ENDIF
	DXX=XAXL/FLOAT(IABS(NX-1))
	DYY=YAXL/FLOAT(IABS(NY-1))
C
	ICL=0
	IF (IABS(NT)/100.GT.0) ICL=2
C
C	CALL CONTOURING ROUTINE ONCE FOR EACH CONTOUR LEVEL TO MINIMIZE
C	STORAGE SPACE AND PEN CHANGES
C
	DO 100 IX=1,NL
		CV=CVAL(IX)
		IF (NT.LT.0) CALL PLOT(FLOAT(ICOL(IX+6)),0.,0)	! PEN COLOR
		IF (ICL.NE.0) IC(1)=ILINE(IX)			! LINE TYPE
		CALL GCONTR(V,NDX,NDY,NX,NY,DXX,DYY,CV,-IX,AE,WORK,
     $			NCH,0.15,NMIN,ICL,IC,IC(1))
100	CONTINUE
C
C	PLOT TITLE AND FINISH UP ROUTINE
C
	IF (IABS(NT)/100.GT.0) CALL NEWPEN(1)		!RESET LINE TYPE
	CS=.21						!TITLE CHARACTER SIZE
	IF (NT.LT.0) CALL PLOT(FLOAT(ICOL(6)),0.,0)	!PEN COLOR
	IF (NT.NE.0.AND.JF.NE.0) THEN			!TITLE
		XP=0.0
		YP=0.0
		CALL SYMBOL(XP,YP,CS,TITLE,
     $			0.,MOD(IABS(NT),100),-3)	!TITLE LENGTH
		XP=ABS(XAXL/2.)-XP/2.
		IF (XP.LT.0.) XP=0.
		CALL SYMBOL(XP,ABS(YAXL)+.15,CS,TITLE,
     $			0.,MOD(IABS(NT),100),-1)	!PLOT TITLE
	ENDIF
	CALL PLOT(0.,0.,3)
	IF (IFLAG.GT.0) THEN
		CALL CTERM(2)				!ASK IF CLEAR SCREN
		CALL PLOTND				!CLOSE PLOT PACKAGE
		REPEAT=.FALSE.
	ENDIF
	IF (IFLAG.LT.0) THEN
		REPEAT=.TRUE.
		CALL CTERM(1)				!RETURN TO TEXT MODE
	ENDIF
	RETURN
	END
