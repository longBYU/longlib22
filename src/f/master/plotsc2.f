C
C *** LAST REVISED ON  8-DEC-1993 07:03:25.89
C *** SOURCE FILE: [LONGLIB93.SOURCES.FORTRAN.MASTER]MLIB.FOR
C
	SUBROUTINE PLOTSC2(X,Y,Y2,NP,IFLAG,XAXL,YAXL,XTITL,NXT,
     1			YTITL,NYT,TITLE,NT,XMIN,XMAX,YMIN,YMAX,ICOL)
C
C	CREATED BY D. LONG     OCT, 1983	AT JPL
C	REVISED BY D. LONG     FEB, 1986 -- ADDED CHANGE OF LINE TYPE
C					    FOR SECOND CURVE
C
C	ROUTINE TO PLOT TWO LINES OF DATA
C
C	X	REAL X VALUE ARRAY
C	Y	REAL Y DATA ARRAY
C	Y2	REAL Y DATA ARRAY
C	NP	INT  # OF POINTS IN ARRAY
C	IFLAG	INT
C	 (MAG)	>10000 REPEAT PLOTTING BUT DO NOT INTIALIZE PLOTTER
C		< 0   REPEAT PLOTTING (DON'T CLOSE PLOTTER OUTPUT)
C		= 0   CLOSE PLOTTER OUTPUT--DO NOT PRODUCE PLOT
C		> 0   SINGLE PLOT OUTPUT ONLY (PLOTTER OUTPUT CLOSED)
C (ONE'S DIGIT) =0  DO NOT PLOT AXISES OR TITLE
C 		=1  PLOT A BOX WITH AXIS TICKS
C		=2  PLOT A SOLID GRID
C		=3  PLOT A TICKED GRID W/O BOX
C		=4  PLOT A TICKED GRID WITH BOX
C		=5  PLOT A BOX WITH AXIS TICKS AND TICKED GRID
C		=6  PLOT W/O BOX OR GRID
C (TEN'S DIGIT) =0  ASK ABOUT SCREEN DEVICE
C		<>0 SCREEN DEVICE CODE
C	XAXL	REAL  X AXIS LENGTH IN INCHES
C		< 0  USE INPUT VALUE SCALING--AXIS PLOTTED
C		> 0  USE AUTO SCALING--AXIS PLOTTED
C	YAXL	REAL  Y AXIS LENGTH IN INCHES
C		< 0  USE INPUT VALUE SCALING--AXIS PLOTTED
C		> 0  USE AUTO SCALING--AXIS PLOTTED
C NOTE: 	XMIN,XMAX,YMIN,YMAX ARE ONLY ACCESSED IF XAXL OR YAXL < 0
C
C	XTITL	CHAR  X AXIS TITLE
C	NXT	INT   NUMBER OF CHARACTERS IN X AXIS TITLE STRING
C		< 0  TICKS ON INSIDE OF AXIS
C		= 0  NO AXIS
C		> 0  TICKS ON TITLE SIDE OF AXIS
C	YTITL	CHAR  Y AXIS TITLE
C	NYT	INT   NUMBER OF CHARACTERS IN Y AXIS TITLE STRING
C		< 0  TICKS ON INSIDE OF AXIS
C		= 0  NO AXIS
C		> 0  TICKS ON TITLE SIDE OF AXIS
C	TITLE	CHAR  PLOT TITLE
C	NT	INT   NUMBER OF CHARACTERS IN PLOT TITLE (<100)
C		= 0  NO TITLE
C		< 0  USE PEN COLOR ARRAY
C			IF ABS(NT)/100 > 0 USE LINE TYPE
C	XMIN	REAL  MINIMUM VALUE DISPLAYED ON X AXIS
C	XMAX	REAL  MAXIMUM VALUE DISPLAYED ON X AXIS
C	YMIN	REAL  MINIMUM VALUE OF Y ARRAY
C	YMAX	REAL  MAXIMUM VALUE OF Y ARRAY
C	ICOL	INT   PEN COLOR CONTROL (ACCESSED ONLY IF NT < 0)
C			ICOL(1) GRID COLOR
C			ICOL(2) AXIS LINE COLOR
C			ICOL(3) AXIS NUMBERS COLOR
C			ICOL(4) AXIS TITLE COLOR
C			ICOL(5) AXIS EXPONENT COLOR
C			ICOL(6) LINE 1 COLOR
C			ICOL(7) LINE 2 COLOR
C			ICOL(8) TITLE COLOR (RETURN)
C
	CHARACTER*(*) XTITL,YTITL,TITLE
	REAL Y(NP),X(NP),Y2(NP),PY(2)
	LOGICAL REPEAT
	INTEGER PL,ICOL(*),IC(4)
	COMMON /CPLOTSC2/XM,DX,YM,DY
	SAVE /CPLOTSC2/,REPEAT
C
	DATA REPEAT/.FALSE./
	PL=3					!PRINTER DATA FILE= FOR003.DAT
	IF (IFLAG.EQ.0) THEN
		IF (REPEAT) CALL PLOTND !CLOSE PLOTTER
		REPEAT=.FALSE.
		RETURN
	ENDIF
	JF=IABS(IFLAG)
	IF (.NOT.REPEAT.AND.JF.LT.10000) THEN
		ILU=-JF/10
		CALL FRAME(PL,ILU,1.2,1.2,1.)	!INTIALIZE PLOT PACKAGE
	ELSE
		CALL CTERM(-1)			!RESTORE PLOT MODE ON TERMINAL
C		CALL NEWPAGE			!NEW PAGE
		JF=MOD(JF,10)
	ENDIF
	JF=MOD(JF,10)
	NX=int(ABS(ANINT(XAXL)))			!GRID SIZES
	NY=int(ABS(ANINT(YAXL)))
	CALL SCALE(X,ABS(XAXL),NP,1,1,XM,DX)	!SMOOTH SCALE FACTORS
	IF (XAXL.LT.0.0) THEN			!INPUT SCALING
		XM=XMIN
		DX=(XMAX-XMIN)/ABS(XAXL)
	ENDIF
	IF (YAXL.LT.0.0) THEN			!INPUT SCALING
		YM=YMIN
		DY=(YMAX-YMIN)/ABS(YAXL)
	ELSE
		YM=Y(1)
		YX=Y2(1)
		DO 5 I=2,NP
			YM=MIN(Y(I),Y2(I),YM)
			YX=MAX(Y(I),Y2(I),YX)
5		CONTINUE
		PY(1)=YM
		PY(2)=YX
		CALL SCALE(PY,ABS(YAXL),2,1,1,YM,DY)	!SMOOTH SCALE FACTORS
	ENDIF
	IF (JF.EQ.0) GOTO 77
	IF (JF.EQ.6) GOTO 76
	IF (JF.GT.1) THEN
		IF (JF.GE.3) NX=-NX
		IF (JF.GE.4) NY=-NY
		IF (NT.LT.0) CALL PLOT(FLOAT(ICOL(1)),0.,0) !PEN COLOR
		CALL GRID(0.,0.,1.,1.,NX,NY)	!PRODUCE GRID
		IF (JF.EQ.5) JF=1
	ENDIF
76	IX=IABS(NXT)
	XL=ABS(XAXL)*SIGN(1.,FLOAT(NXT))
	NADD=0
	IF (NT.LT.0) THEN
		NADD=100000		 !PEN COLOR
		IC(1)=ICOL(2)
		IC(2)=ICOL(3)
		IC(3)=ICOL(4)
		IC(4)=ICOL(5)
	ENDIF
	IF (NXT.NE.0) THEN
		CALL AXIS(0.,0.,XTITL,-IX-NADD,XL,0.,XM,DX,N1,N2,IC) !X-AXIS
		IF (JF.EQ.1) CALL AXIS(0.,ABS(YAXL),XTITL,IX+100+NADD,
     $			XL,0.,XM,DX,N1,N2,IC) !X-AXIS
	ENDIF
	IY=IABS(NYT)+1000
	YL=ABS(YAXL)*SIGN(1.,FLOAT(NYT))
	IF (NYT.NE.0) THEN
		CALL AXIS(0.,0.,YTITL,IY+NADD,YL,90.,YM,DY,N1,N2,IC) !Y-AXIS
		IF (JF.EQ.1) CALL AXIS(ABS(XAXL),0.,YTITL,-IY-100-NADD,
     $			YL,90.,YM,DY,N1,N2,IC) 		!Y-AXIS
	ENDIF
C
77	IF (NT.LT.0) CALL PLOT(FLOAT(ICOL(6)),0.,0) 	!PEN COLOR
	CALL NEWPEN(1)					!SET LINE TYPE
	CALL LINE(X,Y,NP,1,0,0,1,1,XM,DX,YM,DY)		!PLOT DATA
	IF (NT.LT.0) CALL PLOT(FLOAT(ICOL(7)),0.,0)	!PEN COLOR
	CALL NEWPEN(4)					!CHANGE LINE TYPE
	CALL LINE(X,Y2,NP,1,0,0,1,1,XM,DX,YM,DY)	!PLOT DATA
	CALL NEWPEN(1)					!RESTORE LINE TYPE
	CS=.21						!TITLE CHARACTER SIZE
	IF (NT.LT.0) CALL PLOT(FLOAT(ICOL(8)),0.,0)	!PEN COLOR
	IF (NT.NE.0.AND.JF.NE.0) THEN
		XP=0.0
		YP=0.0
		CALL SYMBOL(XP,YP,CS,TITLE,
     $			0.,IABS(NT),-3)			!TITLE LENGTH
		XP=ABS(XAXL/2.)-XP/2.
		IF (XP.LT.0.) XP=0.
		CALL SYMBOL(XP,ABS(YAXL)+.1,CS,TITLE,
     $			0.,IABS(NT),-1)			!PLOT TITLE
	ENDIF
	CALL PLOT(0.,0.,3)				!PEN UP
C
	IF (IFLAG.GT.0) THEN
		CALL CTERM(2)				!ASK IF CLEAR SCREEN
		CALL PLOTND				!CLOSE PLOTTER
		REPEAT=.FALSE.
	ENDIF
	IF (IFLAG.LT.0) THEN
		REPEAT=.TRUE.
		CALL CTERM(1)				!PUT TERMINAL TEXT MODE
	ENDIF
	RETURN
	END
