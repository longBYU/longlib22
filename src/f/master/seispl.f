C
C *** LAST REVISED ON  8-DEC-1993 07:03:25.89
C *** SOURCE FILE: [LONGLIB93.SOURCES.FORTRAN.MASTER]MLIB.FOR
C
	SUBROUTINE SEISPL(X,Y,Z,NND,NPD,NN,NP,IFLAG,NTYPE,SIZE,ZERO,
     1			XAXL,YAXL,XTITL,NXT,YTITL,NYT,TITLE,NT,
     2			XMIN,XMAX,YMIN,YMAX,ICOL)
C
C	CREATED BY D. LONG       APR, 1985	AT JPL
C
C	ROUTINE TO PLOT IN THE STYLES OFTEN USED IN SEISMIC PROCESSING
C
C	X	REAL X DATA ARRAY DIMENSION X(NPD)
C	Y	REAL Y DATA ARRAY DIMENSION Y(NPD,NND)
C	Z	REAL OFFSET VALUE ARRAY DIMENSION Z(NN)
C			OFFSET VALUE IS ADDED TO Y VALUE BEFORE PLOTTING.
C			WHEN USING LOG SCALING NOTE THAT THIS OCCURS AFTER
C			TAKING LOG OF DATA.  THIS ARRAY IS USED FOR VERTICALLY
C			OFFSETTING DIFFERENT PLOTTED LINES.
C	NND	INT  DIMENSION OF Y ARRAY
C	NPD	INT  DIMENSION OF X,Y ARRAYS
C	NN	INT  NUMBER OF LINES ARRAYS
C	NP	INT  NUMBER OF POINTS TO PLOT
C	IFLAG	INT
C	  (MAG) >10000 REPEAT PLOTTING BUT DO NOT INTIALIZE PLOTTER
C		< 0  REPEAT PLOTTING (DON'T CLOSE PLOTTER OUTPUT)
C		= 0  CLOSE PLOTTER OUTPUT--DO NOT PRODUCE PLOT
C		> 0  SINGLE PLOT OUTPUT ONLY (PLOTTER OUTPUT CLOSED)
C	  (ONE'S DIGIT) = 1 X LINEAR, Y LOGRITHMIC (BASE 10)
C	  (ONE'S DIGIT) = 2 X LOGRITHMIC,Y LINEAR
C	  (ONE'S DIGIT) = 3 X LOGRITHMIC,Y LOGRITHMIC
C	  (ONE'S DIGIT) = 4 X LINEAR, Y LINEAR
C	  (TEN'S DIGIT) = 0 NO AXIS OR GRID 
C	  (TEN'S DIGIT) = 1 PLOT BOX WITH AXIS TICKS
C	  (TEN'S DIGIT) = 2 PLOT SOLID GRID
C	  (TEN'S DIGIT) = 3 PLOT TICKED GRID W/O BOX
C	  (TEN'S DIGIT) = 4 PLOT TICKED GRID WITH BOX
C	  (TEN'S DIGIT) = 5 PLOT BOX WITH AXIS TICKS AND TICKED GRID
C	  (TEN'S DIGIT) = 6 PLOT W/O BOX OR GRID BUT USE AXISES
C	  (TEN'S DIGIT) = 7 PLOT SOLID LOGRITHMIC GRID
C	  (TEN'S DIGIT) = 8 PLOT DOTTED LOGRITHMIC GRID
C	  (TEN'S DIGIT) = 9 PLOT TICKED LOGRITHMIC GRID
C     (HUNDRED'S DIGIT) = 0 ASK WHICH SCREEN DEVICE TO USE
C		      <>0 SCREEN DEVICE CODE NUMBER
C	NTYPE	INT   PLOTTING TYPE CODE
C			< 0 ZERO REFERENCE PLOTTED
C	   MAG(NTYPE)	= 0 SYMBOLS ONLY
C			= 1 SYMBOLS ONLY
C			= 2 POINTS ONLY
C			= 3 CONNECTED POINTS
C			= 4 VERTICAL LINES FROM POINTS TO CENTER LINE
C			= 5 VERTICAL LINES PLUS SYMBOL
C			= 6 CONNECTED POINTS WITH VERTICAL LINES
C			= 7 CONNECTED POINTS WITH VERTICAL LINES ON POSITIVE HALF
C			= 8 CONNECTED POINTS WITH VERTICAL LINES ON NEGATIVE HALF
C			= 9 AREA BETWEEN CONNECTED POINTS AND ZERO FILLED
C			= 10 POSITIVE AREA BETWEEN POINTS AND ZERO FILLED
C			= 11 NEGATIVE AREA BETWEEN POINTS AND ZERO FILLED
C	SIZE	REAL  PLOTTED SYMBOL SCALE (NTYPE = 0,1, OR 4)
C		      SPACING BETWEEN SOLID FILL LINES (NTYPE = 9,10,11)
C		      SIZE < 0.0 WILL MAKE CENTER LINE DOTTED
C	ZERO	REAL  VALUE USED AS PLOT ZERO
C	XAXL	REAL  X AXIS LENGTH IN INCHES
C		< 0  USE INPUT VALUE SCALING--AXIS PLOTTED
C		> 0  USE AUTO SCALING--AXIS PLOTTED
C	YAXL	REAL  Y AXIS LENGTH IN INCHES
C		< 0  USE INPUT VALUE SCALING--AXIS PLOTTED
C		> 0  USE AUTO SCALING--AXIS PLOTTED
C
C NOTE: 	XMIN,XMAX,YMIN,YMAX ARE ACCESSED IF XAXL OR YAXL < 0
C
C	XTITL	CHAR  X AXIS TITLE
C	NXT	INT   NUMBER OF CHARACTERS IN X AXIS TITLE STRING
C		< 0  TICKS ON INSIDE OF AXIS
C		= 0  NO AXIS
C		> 0  TICKS ON TITLE SIDE OF AXIS
C	YTITL	CHAR  Y AXIS TITLE
C	NYT	INT   NUMBER OF CHARACTERS IN Y AXIS TITLE STRING
C		< 0  TICKS ON INSIDE OF AXIS
C		= 0  NO AXIS
C		> 0  TICKS ON TITLE SIDE OF AXIS
C	TITLE	CHAR  PLOT TITLE
C	NT	INT   NUMBER OF CHARACTERS IN PLOT TITLE
C		= 0  NO TITLE
C		< 0  USE COLOR ARRAY (REQUIRES XMIN,XMAX,YMIN,YMAX TOO)
C	XMIN	REAL  MINIMUM VALUE DISPLAYED ON X AXIS
C	XMAX	REAL  MAXIMUM VALUE DISPLAYED ON X AXIS
C	YMIN	REAL  MINIMUM VALUE OF Y ARRAY
C	YMAX	REAL  MAXIMUM VALUE OF Y ARRAY
C	ICOL	INT   ARRAY OF PEN COLORS DIMENSIONED ICOL(NP+6)
C			ICOL(1) = GRID COLOR
C			ICOL(2) = AXIS LINE COLOR
C			ICOL(3) = AXIS NUMBERS COLOR
C			ICOL(4) = AXIS TITLE COLOR
C			ICOL(5) = AXIS EXPONENT COLOR
C			ICOL(6) = TITLE COLOR (COLOR UPON RETURN)
C			ICOL(7) = POINT SET COLOR 1
C			ICOL(8) = POINT SET COLOR 2
C			   .	     .	          3
C
	CHARACTER*(*) XTITL,YTITL,TITLE
	REAL Y(NPD,NND),X(NPD),Z(NND),PY(2)
	LOGICAL REPEAT
	INTEGER PL,ICOL(*),IC(4)
	COMMON /CSEISPL/XM,DX,YM,DY
	SAVE /CSEISPL/,REPEAT
	DATA REPEAT/.FALSE./
	CS=.21						! TITLE CHARACTER SIZE
C
C	HANDLE PLOT PACKAGE INITIALIZATION
C
	PL=3				!DEFAULT PRINTER DATA FILE= FOR003.DAT
	IF (IFLAG.EQ.0) THEN
		IF (REPEAT) CALL PLOTND !CLOSE PLOT PACKAGE
		REPEAT=.FALSE.
		RETURN
	ENDIF
	JF=IABS(IFLAG)
	IF (.NOT.REPEAT.AND.JF.LT.10000) THEN
		ILU=-(JF/100)				!SCREEN DEVICE, CLEAR SCREEN
		CALL FRAME(PL,ILU,1.2,1.2,1.)		!INTIALIZE PLOT PACKAGE
	ELSE
		CALL CTERM(-1)				!RESTORE PLOT MODE
C		CALL NEWPAGE				!NEW PAGE
		JF=MOD(JF,100)
	ENDIF
	JF=MOD(JF,100)
	IF=JF
	IF (IF.GT.10) IF=MOD(IF,10)
	JF=JF-IF
	NX=int(ABS(ANINT(XAXL)))			!GRID SIZES
	NY=int(ABS(ANINT(YAXL)))
C
C	DETERMINE SCALING PARAMETERS
C
	IF (XAXL.GT.0.0) THEN				!INPUT SCALING
	    XM=X(1)
	    DX=X(1)
	    DO 4 I=2,NP
		XM=MAX(X(I),XM)
		DX=MIN(X(I),DX)
   4	    CONTINUE
	    PY(1)=XM
	    PY(2)=DX
	    IF (IF.EQ.2.OR.IF.EQ.3) THEN
		CALL SCALG(PY,ABS(XAXL),2,1,1,XM,DX)	!SMOOTH SCALE FACTORS
		IK=-1
		GDX=1./DX
		NX=int(DX*ABS(XAXL))
		INX=-1
	    ELSE
		CALL SCALE(PY,ABS(XAXL),2,1,1,XM,DX)	!SMOOTH SCALE FACTORS
		IK=0
		GDX=1.
		INX=1
	    ENDIF
	ELSE
	    IF (IF.EQ.2.OR.IF.EQ.3) THEN
		XM=(ABS(XMIN)+1.E-25)
		IF (XM.NE.AINT(XM)) XM=AINT(XM)-1.
		DX=AINT(ALOG10(ABS(XMAX)+1.E-25))+1.
		DX=(DX-XM)/ABS(XAXL)
		GDX=1./DX
		IK=-1
		NX=int(DX*ABS(XAXL))
		INX=-1
	    ELSE
		XM=XMIN
		DX=(XMAX-XMIN)/ABS(XAXL)
		GDX=1.
		IK=0
		INX=1
	    ENDIF
	ENDIF
	IF (YAXL.GT.0.0) THEN				!INPUT SCALING
	    YM=Y(1,1)
	    DY=Y(1,1)
	    DO 5 N=1,NN
		DO 5 I=1,NP
		    YM=MAX(Y(I,N)+Z(N),YM)
		    DY=MIN(Y(I,N)+Z(N),DY)
5	    CONTINUE
	    PY(1)=YM
	    PY(2)=DY
	    IF (IF.EQ.1.OR.IF.EQ.3) THEN
		CALL SCALG(PY,ABS(YAXL),2,1,1,YM,DY)	!SMOOTH SCALE FACTORS
		IK=-1+IK
		GDY=1./DY
		NY=int(DY*ABS(YAXL))
		INY=-1
	    ELSE
		CALL SCALE(PY,ABS(YAXL),2,1,1,YM,DY)	!SMOOTH SCALE FACTORS
		IK=1+IK
		GDY=1.
		INY=1
	    ENDIF
	ELSE
	    IF (IF.EQ.1.OR.IF.EQ.3) THEN
		YM=ALOG10(ABS(YMIN)+1.E-25)
		IF (YM.NE.AINT(YM)) YM=AINT(YM)-1.
		DY=AINT(ALOG10(ABS(YMAX)+1.E-25))+1.
		DY=(DY-YM)/ABS(YAXL)
		GDY=1./DY
		NY=int(DY*ABS(YAXL))
		IK=-1+IK
		INY=-1
	    ELSE
		YM=YMIN
		DY=(YMAX-YMIN)/ABS(YAXL)
		IK=1+IK
		GDY=1.
		INY=1
	    ENDIF
	ENDIF
	IF (JF.EQ.0) GOTO 77				!NO AXIS OR GRID
C
C	PLOT GRID
C
	IF (JF.EQ.60) GOTO 76				!NO GRID
	IF (JF.GT.60) THEN				!LOGRITHMIC GRID
		II=0
		IF (JF.EQ.70) II=1
		IF (JF.EQ.80) II=2
		CALL LGRID(0.,0.,GDX,GDY,INX*NX,INY*NY,II)
		GOTO 76
	ENDIF
	IF (JF.GE.20) THEN				!CARTESIAN GRID
		IF (JF.GE.30) NX=-NX
		IF (JF.GE.40) NY=-NY
		IF (NT.LT.0) CALL PLOT(FLOAT(ICOL(1)),0.,0) ! PEN COLOR
		CALL GRID(0.,0.,GDX,GDY,NX,NY)		!PRODUCE GRID
		IF (JF.EQ.50) JF=10
	ENDIF
76	NADD=0
C
C	PLOT AXES
C
	IF (NT.LT.0) THEN
		NADD=100000				!PEN COLOR
		IC(1)=ICOL(2)
		IC(2)=ICOL(3)
		IC(3)=ICOL(4)
		IC(4)=ICOL(5)
	ENDIF
	IX=IABS(NXT)
	XL=ABS(XAXL)*SIGN(1.,FLOAT(NXT))		!AXIS LENGTH WITH TICK INFOR
	IF (NXT.NE.0) THEN
		IF (IF.EQ.2.OR.IF.EQ.3) THEN
		CALL LGAXS(0.,0.,XTITL,-IX-NADD,XL,0.,XM,DX,IC) !X-AXIS
		IF (JF.EQ.10) CALL LGAXS(0.,ABS(YAXL),XTITL,IX+100+NADD,
     $			XL,0.,XM,DX,IC) 		!X-AXIS
		ELSE
		CALL AXIS(0.,0.,XTITL,-IX-NADD,XL,0.,XM,DX,N1,N2,IC)  !X-AXIS
		IF (JF.EQ.10) CALL AXIS(0.,ABS(YAXL),XTITL,IX+100+NADD,
     $			XL,0.,XM,DX,N1,N2,IC)  		!X-AXIS
		ENDIF
	ENDIF
	IY=IABS(NYT)+1000
	YL=ABS(YAXL)*SIGN(1.,FLOAT(NYT))
	IF (NYT.NE.0) THEN
		IF (IF.EQ.1.OR.IF.EQ.3) THEN
		CALL LGAXS(0.,0.,YTITL,IY+NADD,YL,90.,YM,DY,IC) !Y-AXIS
		IF (JF.EQ.10) CALL LGAXS(ABS(XAXL),0.,YTITL,-IY-100-NADD,
     $			YL,90.,YM,DY,IC) 		!Y-AXIS
		ELSE
		CALL AXIS(0.,0.,YTITL,IY+NADD,YL,90.,YM,DY,N1,N2,IC)  !Y-AXIS
		IF (JF.EQ.10) CALL AXIS(ABS(XAXL),0.,YTITL,-IY-100-NADD,
     $			YL,90.,YM,DY,N1,N2,IC)		!Y-AXIS
		ENDIF
	ENDIF
77	CONTINUE
C
C	NOW PLOT DATA
C
	RES=ABS(SIZE)
	NTP=IABS(NTYPE)
	DO 79 IN=1,NN
		IF (NT.LT.0) CALL PLOT(FLOAT(ICOL(6+IN)),0.,0)   !PEN COLOR
		Z1=ZERO+Z(IN)
		IF (IF.EQ.1.OR.IF.EQ.3) Z1=ALOG10(ABS(Z1)+1.E-25)
		Z1=(Z1-YM)/DY
		IP=3
		DO 79 I=1,NP
		    X1=X(I)
		    IF (IF.EQ.2.OR.IF.EQ.3) X1=ALOG10(ABS(X1)+1.E-25)
		    Y1=Y(I,IN)+Z(IN)
		    IF (IF.EQ.1.OR.IF.EQ.3) Y1=ALOG10(ABS(Y1)+1.E-25)
		    X1=(X1-XM)/DX
		    Y1=(Y1-YM)/DY
		    IF (I.EQ.1) XOLD=X1
		    IF (I.EQ.1) YOLD=Y1
		    IF (NTP.EQ.0.OR.NTP.EQ.1) THEN	! SYMBOLS ONLY
			CALL SYMBOL(X1,Y1,ABS(SIZE),CHAR(IN),0.,1,-1)
			IF (NTYPE.LT.0) THEN	! ADD CENTER LINE
				IF (SIZE.LT.0.0) CALL NEWPEN(2)
				CALL PLOT(XOLD,Z1,3)
				CALL PLOT(X1,Z1,2)
				IF (SIZE.LT.0.0) CALL NEWPEN(1)
			ENDIF
		    ENDIF
		    IF (NTP.EQ.2) THEN		! DOTS ONLY
			CALL PLOT(X1,Y1,3)
			CALL PLOT(X1,Y1,2)
			IF (NTYPE.LT.0) THEN	! ADD CENTER LINE
				IF (SIZE.LT.0.0) CALL NEWPEN(2)
				CALL PLOT(XOLD,Z1,3)
				CALL PLOT(X1,Z1,2)
				IF (SIZE.LT.0.0) CALL NEWPEN(1)
			ENDIF
		    ENDIF
		    IF (NTP.EQ.3) THEN		! CONNECTED POINTS
			IF (NTYPE.LT.0) CALL PLOT(XOLD,YOLD,3)
			CALL PLOT(X1,Y1,IP)
			IF (NTYPE.LT.0) THEN	! ADD CENTER LINE
				IF (SIZE.LT.0.0) CALL NEWPEN(2)
				CALL PLOT(XOLD,Z1,3)
				CALL PLOT(X1,Z1,2)
				IF (SIZE.LT.0.0) CALL NEWPEN(1)
			ENDIF
		    ENDIF
		    IF (NTP.EQ.4) THEN		! VERTICAL LINES ONLY
			CALL PLOT(X1,Y1,3)
			CALL PLOT(X1,Z1,2)
			IF (NTYPE.LT.0) THEN	! ADD CENTER LINE
				IF (SIZE.LT.0.0) CALL NEWPEN(2)
				CALL PLOT(X1,Z1,3)
				CALL PLOT(XOLD,Z1,2)
				IF (SIZE.LT.0.0) CALL NEWPEN(1)
			ENDIF
		    ENDIF
		    IF (NTP.EQ.5) THEN		! VERTICAL LINES PLUS SYMBOL
			CALL SYMBOL(X1,Y1,ABS(SIZE),CHAR(IN),0.,1,-1)
			CALL PLOT(X1,Z1,2)
			IF (NTYPE.LT.0) THEN	! ADD CENTER LINE
				IF (SIZE.LT.0.0) CALL NEWPEN(2)
				CALL PLOT(X1,Z1,3)
				CALL PLOT(XOLD,Z1,2)
				IF (SIZE.LT.0.0) CALL NEWPEN(1)
			ENDIF
		    ENDIF
		    IF (NTP.EQ.6) THEN		! CONNECTED LINES
			CALL PLOT(X1,Y1,IP)
			CALL PLOT(X1,Z1,2)
			IF (NTYPE.LT.0) THEN	! ADD CENTER LINE
				IF (SIZE.LT.0.0) CALL NEWPEN(2)
				CALL PLOT(X1,Z1,3)
				CALL PLOT(XOLD,Z1,2)
				IF (SIZE.LT.0.0) CALL NEWPEN(1)
			ENDIF
			CALL PLOT(X1,Y1,3)
		    ENDIF
		    IF (NTP.EQ.7) THEN		! POSITIVE HALF CONNECTED LINES
			CALL PLOT(X1,Y1,IP)
			IF (Y1.GT.Z1) THEN
				CALL PLOT(X1,Z1,2)
				CALL PLOT(X1,Y1,2)
			ENDIF
			IF (NTYPE.LT.0) THEN	! ADD CENTER LINE
				IF (SIZE.LT.0.0) CALL NEWPEN(2)
				CALL PLOT(XOLD,Z1,3)
				CALL PLOT(X1,Z1,2)
				IF (SIZE.LT.0.0) CALL NEWPEN(1)
				CALL PLOT(X1,Y1,3)
			ENDIF
		    ENDIF
		    IF (NTP.EQ.8) THEN		! NEGATIVE HALF CONNECTED LINES
			CALL PLOT(X1,Y1,IP)
			IF (Y1.LT.Z1) THEN
				CALL PLOT(X1,Z1,2)
				CALL PLOT(X1,Y1,2)
			ENDIF
			IF (NTYPE.LT.0) THEN	! ADD CENTER LINE
				IF (SIZE.LT.0.0) CALL NEWPEN(2)
				CALL PLOT(XOLD,Z1,3)
				CALL PLOT(X1,Z1,2)
				IF (SIZE.LT.0.0) CALL NEWPEN(1)
				CALL PLOT(X1,Y1,3)
			ENDIF
		    ENDIF
		    IF (NTP.EQ.9) THEN		! FILLED AREA
			CALL PLOT(XOLD,YOLD,3)
			CALL PLOT(X1,Y1,2)
			DDX=X1-XOLD
			IF (DDX.NE.0.0) THEN
			    IXX=int(DDX/RES)
			    DDY=(Y1-YOLD)/(X1-XOLD)*RES
			    DO 80 IX=1,IXX
				X2=XOLD+IX*RES
				Y2=YOLD+IX*DDY
				CALL PLOT(X2,Z1,3)
				CALL PLOT(X2,Y2,2)
80			    CONTINUE
			ENDIF
		    ENDIF
		    IF (NTP.EQ.10) THEN		! POSITIVE HALF FILLED AREA
			CALL PLOT(XOLD,YOLD,3)
			CALL PLOT(X1,Y1,2)
			DDX=X1-XOLD
			IF (DDX.NE.0.0) THEN
			    IXX=int(DDX/RES)
			    DDY=(Y1-YOLD)/(X1-XOLD)*RES
			    DO 82 IX=1,IXX
				X2=XOLD+IX*RES
				Y2=YOLD+IX*DDY
				IF (Y2.GT.Z1) THEN
					CALL PLOT(X2,Z1,3)
					CALL PLOT(X2,Y2,2)
				ENDIF
82			    CONTINUE
			ENDIF
			IF (NTYPE.LT.0) THEN
				IF (SIZE.LT.0.0) CALL NEWPEN(2)
				CALL PLOT(XOLD,Z1,3)
				CALL PLOT(X1,Z1,2)
				IF (SIZE.LT.0.0) CALL NEWPEN(1)
			ENDIF
		    ENDIF
		    IF (NTP.EQ.11) THEN		! POSITIVE HALF FILLED AREA
			CALL PLOT(XOLD,YOLD,3)
			CALL PLOT(X1,Y1,2)
			DDX=X1-XOLD
			IF (DDX.NE.0.0) THEN
			    IXX=int(DDX/RES)
			    DDY=(Y1-YOLD)/(X1-XOLD)*RES
			    DO 84 IX=1,IXX
				X2=XOLD+IX*RES
				Y2=YOLD+IX*DDY
				IF (Y2.LT.Z1) THEN
					CALL PLOT(X2,Z1,3)
					CALL PLOT(X2,Y2,2)
				ENDIF
84			    CONTINUE
			ENDIF
			IF (NTYPE.LT.0) THEN
				IF (SIZE.LT.0.0) CALL NEWPEN(2)
				CALL PLOT(XOLD,Z1,3)
				CALL PLOT(X1,Z1,2)
				IF (SIZE.LT.0.0) CALL NEWPEN(1)
			ENDIF
		    ENDIF
C
		    XOLD=X1
		    YOLD=Y1
		    IP=2
 79	CONTINUE
C
C	PLOT TITLE
C
	IF (NT.LT.0) CALL PLOT(FLOAT(ICOL(6)),0.,0)	! PEN COLOR
	IF (NT.NE.0.AND.JF.NE.0) THEN			! TITLE
		XP=0.
		YP=0.
		CALL SYMBOL(XP,YP,
     $			CS,TITLE,0.,IABS(NT),-3)	! TITLE LENGTH
		XP=ABS(XAXL/2.)-XP/2.
		IF (XP.LT.0.) XP=0.
		CALL SYMBOL(XP,ABS(YAXL)+.15,
     $			CS,TITLE,0.,IABS(NT),-1)	! PLOT TITLE
	ENDIF
	CALL PLOT(0.,0.,3)
C
C	PLOT PACKAGE STUFF
C
	IF (IFLAG.GT.0) THEN
		CALL CTERM(2)				! ASK IF CLEAR SCREN
		CALL PLOTND				! CLOSE PLOT PACKAGE
		REPEAT=.FALSE.
	ENDIF
	IF (IFLAG.LT.0) THEN
		REPEAT=.TRUE.
		CALL CTERM(1)				! RETURN TO TEXT MODE
	ENDIF
	RETURN
	END
