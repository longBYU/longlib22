	SUBROUTINE AXIS3(X0,Y0,T,N0,S0,A0,B0,C0,D0,E0,F0,ICOL)
C
C	WRITTEN BY DGL  17-OCT-1983
C	REVISED BY DGL  28-AUG-1987
C
C	PLOTS A SINGLE COORDINATE AXIS USING SYMBOL AND NUMBER.
C	THIS VERSION OF AXIS CAN HANDLE NON-INTEGER AXIS LENGTH
C	AND PERMITS FORMATTING OF THE NUMERIC LABELS. 
C
C	X0  (R)	X COORDINATE OF START OF AXIS
C	Y0  (R)	Y COORDINATE OF START OF AXIS
C	T   (C)	CHARACTER STRING TO DESCRIBE AXIS
C	N0  (I)	NUMBER OF CHARACTERS IN STRING
C		- ON CLOCKWISE SIDE OF AXIS (NORMAL FOR X)
C		+ ON COUNTER CLOCKWISE SIDE OF AXIS (NORMAL FOR Y)
C		HUNDREDS DIGIT	= 1 NO LABELING OF AXIS--TICKS AND LINE ONLY
C		THOUSANDS DIGIT = 1 HORIZONTAL NUMBERS IN Y AXIS LABEL
C	S0  (R)	LENGTH OF AXIS IN INCHES
C		< 0	TICKS PLACED ON OPPOSITE SIDE OF AXIS LABEL
C		= 0	NO ACTION (NOP)
C		> 0	NORMAL
C	A0  (R)	ANGLE OF AXIS WITH RESPECT TO X AXIS OF PAPER
C			0.0 FOR X-AXIS
C			90.0 FOR Y-AXIS
C	B0  (R)	MINIMUM VALUE ON TICK AXIS
C	C0  (R)	MAXIMUM VALUE ON TICK AXIS
C	D0  (R)	INT(D0) = NUMBER OF MAJOR AXIS TICKS
C		INT((INT(D0)-D0)*100) = NUMBER OF MINOR AXIS TICKS BETWEEN MAJOR TICKS
C		INT(MOD((INT(D0)-D0)*10000,100) = NUMBER OF SUB MINOR AXIS TICKS 
C			BETWEEN MINOR TICKS
C	E0  (R)	CHARACTER SIZE OF TITLE AND NUMBER (IF E0=0, DEFAULTS TO 0.15)
C			< 0 THEN DO NOT AUTO SCALE BY (x10 TO POWER)
C	F0  (R)	NUMBER SPECIFICATION (FORMAT FX.Y)
C		 (SEE NUMBER)
C		 -1 WILL AUTOMATICALLY GENERATE A "NICE" FORMAT
C	ICOL (I) OPTIONAL COLOR ARRAY (ACCESSED ONLY IF 100000'S DIGIT <> 0)
C		 ICOL(1) = AXIS LINE AND TICK COLOR
C		 ICOL(2) = NUMERIC LABEL COLOR
C		 ICOL(3) = TITLE COLOR
C		 ICOL(4) = EXPONENT COLOR
C		PEN COLOR ON RETURN WILL DEPEND ON OPTIONS IN THE
C		ORDER LISTED ABOVE
C
	INTEGER ICOL(*)
	CHARACTER*(*) T
C
	DATA SPACE/0.08/		! MIN SPACING BETWEEN ITEMS
	ROTX(X,Y)=CO*X-SI*Y+X01		! ROTATION MATRIX
	ROTY(X,Y)=SI*X+CO*Y+Y01
C
	TL=0.1				! TICK LENGTH
	X01=X0
	Y01=Y0
	ANG=A0				! ROTATION ANGLE
	E1=E0				! CHARACTER SIZE
	CS=ABS(E1)
	IF (CS.EQ.0.) CS=.15
	IF (S0.EQ.0.0) GOTO 1000	! ZERO LENGTH AXIS
	X1=D0*1.000002
	NJT=int(ABS(X1))		! NUMBER OF MAJOR TICKS
	NNT=int(100.0*(ABS(X1)-NJT))	! NUMBER OF MINOR TICKS
	NST=int(100.0*((ABS(X1)-NJT)*100.0-NNT))! NUMBER OF SUB-MINOR TICKS
	IF (NJT.LT.2) NJT=2
	XJ=ABS(S0)/(NJT-1)		! INCREMENT BETWEEN MAJOR TICKS
	XN=XJ
	IF (NNT.NE.0) XN=XN/(NNT+1)	! INCREMENT BETWEEN MINOR TICKS
	XS=XN/(NST+1)			! INCREMENT BETWEEN SUB-MINOR TICKS
	N1=MOD(N0,100000)
	IF (IABS(N1)/1000.NE.0) HOR=90.0 ! ROTATION ANGLE
	CO=COS(ANG*0.017453294)		! AXIS ANGLE ROTATION
	SI=SIN(ANG*0.017453294)
	HOR=ANG				! ANGLE OF NUMBER LABELS
	NC=MOD(IABS(N1),100)		! NUMBER OF CHARACTERS IN TITLE
C
C	DECODE NUMBER FORMAT
C
	FA=F0
        IF (FA.EQ.-1.0) THEN		! INPUT WAS -1.0
		FA=1003.0		! DEFAULT AUTO SCALING FORMAT
		IF (E1.LT.0.0) THEN	! NO AUTO SCALING SO MAKE
		  NG=1			! FORMAT TO FIT
		  IF (B0.NE.0.0) NG=MAX(NG,INT(ALOG10(
     $					ABS(B0))+0.001))
		  IF (C0.NE.0.0) NG=MAX(NG,INT(ALOG10(
     $					ABS(C0))+0.001))
		  IF (B0.LT.0.0.OR.C0.LT.0) NG=NG+1
		  FA=1000.0+FLOAT(NG)
		ENDIF
	ENDIF
	IF (ABS(FA).GT.1000.0) THEN	! OUTPUT DESIRED IS INTEGER
		ND=int(ABS(FA)-1000.0)	! INPUT INTEGER VALUE
C		FA=3.+FLOAT(ND)*(1.01)	! DEFAULT FORMAT FOR NOT AUTOSCALE
C		IF (E1.LT.0.0) THEN	! NO AUTO SCALING TO MAKE FORMAT
C		  NG=2			! WHICH FITS
C		  IF (B0.NE.0.0) NG=MAX(NG,INT(ALOG10(
C     $					ABS(B0))+0.001)+1)
C		  IF (C0.NE.0.0) NG=MAX(NG,INT(ALOG10(
C     $					ABS(C0))+0.001)+1)
C		  IF (B0.LT.0.0.OR.C0.LT.0) NG=NG+1
C		  FA=FLOAT(NG)+FLOAT(ND)*1.01
C		ENDIF
	ENDIF
	ND=int(MOD(ABS(FA),1000.0))	! NUMBER OF DIGITS
	NG=int(100.*(MOD(ABS(FA),1000.)-ND+0.0001))! NUMBER OF DIGITS RIGHT OF D.P.
	IF (NG.GT.17) NG=NG/10		! CORRECT INPUT SIMPLE ERRORS
	IF (FA.LT.0.0) ND=ND-4		! EXPONENTIAL NOTATION
	IF (ND.LE.0) ND=NG
	NDD=ND
	IF (FA.LT.0.0) NDD=ND+4		! EXPONENTIAL NOTATION
	IF (ABS(FA).GT.1000) NG=-1	! FORMATTED INTEGER
C
	TL1=TL
	IF (S0.LT.0.0) TL1=-TL		! REVERSE SIDE OF TICKS
	IF (S0.LT.0.0) TL=0.0		! REVERSE SIDE OF TICKS
	IF (IABS(N1)/1000.NE.0) GOTO 10
		DNX=-NDD*CS/2.0		! NUMBER LABEL DISTANCE FROM AXIS
		DNY=-TL-SPACE-CS	! NUMBER LABEL DISTANCE FROM AXIS
		DTY=DNY-CS-SPACE	! TITLE DISTANCE FROM AXIS
		GOTO 20
10	CONTINUE			! HORIZONTAL NUMBERS ON VERTICAL AXIS
		DNX=-CS/2.0		! NUMBER LABEL DISTANCE FROM AXIS
		DNY=-TL-SPACE		! NUMBER LABEL DISTANCE FROM AXIS
		DTY=DNY-NDD*CS-2.*SPACE	! TITLE DISTANCE FROM AXIS
		HOR=ANG-90.0
20	CONTINUE
	IF (N1.LT.0) GOTO 30		! CLOCKWISE TITLES
		DNY=-DNY-CS		! COUNTER-CLOCKWISE TITLES
		DTY=-DTY-CS
		TL1=-TL1		! CHANGE SIDES OF TICKS
		IF (IABS(N1).LT.1000) GOTO 30
			DNY=DNY+CS*NDD
			DTY=DNY+SPACE
30	X1=0.0				! FIRST MAJOR TICK
	Y1=0.0
	Y2=-TL1
	IF (IABS(N0).GE.100000) CALL PLOT(FLOAT(ICOL(1)),0.,0)
	CALL PLOT(ROTX(X1,Y1),ROTY(X1,Y1),3)
	CALL PLOT(ROTX(X1,Y2),ROTY(X1,Y2),2)
	DO 100 I=1,NJT-1		! MAJOR TICKS
		CALL PLOT(ROTX(X1,Y1),ROTY(X1,Y1),3)
		X1=XJ*I
		Y2=-TL1
		CALL PLOT(ROTX(X1,Y1),ROTY(X1,Y1),2)
		CALL PLOT(ROTX(X1,Y2),ROTY(X1,Y2),2)
		DO 110 J=1,NNT+1	! MINOR TICKS
			Y2=-TL1*0.7
			X2=X1+XN*J-XJ
			CALL PLOT(ROTX(X2,Y1),ROTY(X2,Y1),3)
			CALL PLOT(ROTX(X2,Y2),ROTY(X2,Y2),2)
			Y2=-TL1*0.4
			DO 120 K=1,NST	! SUB MINOR TICKS
				X3=X2+XS*K-XN
				CALL PLOT(ROTX(X3,Y1),ROTY(X3,Y1),3)
				CALL PLOT(ROTX(X3,Y2),ROTY(X3,Y2),2)
120			CONTINUE
110		CONTINUE
100	CONTINUE
	IF (MOD(IABS(N1),1000).GT.100) GOTO 1000 ! NO LABELING
	XS=0.0					! EXPONENT
	IF (E1.LT.0.) GOTO 140			! NO AUTO SCALING
C
C	COMPUTE AUTO EXPONENT SCALING SO THAT THE FORMATED LABEL
C	HAS THE INTEGER PORTION FILLED AS MUCH AS POSSIBLE
C
	I=ND-NG-1
	IF (B0.LT.0.0.OR.C0.LT.0.0) I=I-1
	IF (B0.NE.0.0) THEN
		X1=ALOG10(ABS(B0)+1.E-30)
		IF (X1.LT.0.0.AND.ABS(AINT(x1-0.001)-X1).
     $			GT.0.001) X1=X1-1.0
		IF (X1.GE.0.0) X1=X1+1.0
		X1=AINT(X1)
	ELSE
		X1=0.0
	ENDIF
	IF (C0.NE.0.0) THEN
		Y1=ALOG10(ABS(C0)+1.E-30)
		IF (Y1.LT.0.0.AND.ABS(AINT(Y1-0.001)-Y1).
     $			GT.0.001) Y1=Y1-1.0
		IF (Y1.GE.0.0) Y1=Y1+1.0
		Y1=AINT(Y1)
	ELSE
		Y1=0.0
	ENDIF
	X2=MIN(X1,Y1)
	X3=MAX(X1,Y1)
	IF (X3.LT.0.0) X3=X3+1
	IF (X2.LT.0.0.AND.NG.LE.2-X2) XS=ND-NG-1-X2
	IF (I.LT.X3+XS) XS=I-X3
140	Y1=DNY
	Y2=(C0-B0)/(NJT-1)
	IF (IABS(N0).GE.100000) CALL PLOT(FLOAT(ICOL(2)),0.,0)
	E1=XS					! EXPONENT VALUE
	DO 150 I=1,NJT				! LABEL MAJOR TICKS
		X1=(I-1)*XJ+DNX
		C1=(Y2*(I-1)+B0)*10.**E1
		CALL NUMBER(ROTX(X1,Y1),ROTY(X1,Y1),CS,C1,HOR,FA,-1)
150	CONTINUE
C
C	PLOT TITLE
C
	IF (NC.NE.0) THEN
	   Y1=0.
	   X1=0.
	   CALL SYMBOL(X1,Y1,CS,T,0.,NC,-3)	! GET TITLE LENGTH
	   DTX=(ABS(S0)-X1)/2.			! CENTER TITLE
	   IF (E1.NE.0.0) DTX=DTX-CS*3.0	! ADD EXPONENT SPACE
	   IF(IABS(N0).GE.100000)CALL PLOT(FLOAT(ICOL(3)),0.,0)
	   CALL SYMBOL(ROTX(DTX,DTY),ROTY(DTX,DTY),CS,T,ANG,NC,-1)
	   DTX=DTX+X1
	ELSE
	   DTX=ABS(S0)/2.
	   IF (E1.NE.0.0) DTX=DTX-CS*3.0	! ADD EXPONENT SPACE
	ENDIF
	X1=DTX+CS/2.
	Y1=DTY
	IF (E1.EQ.0.0) GOTO 1000		! NO EXPONENT
	IF(IABS(N0).GE.100000)CALL PLOT(FLOAT(ICOL(4)),0.,0)
	E1=-E1
	CALL SYMBOL(ROTX(X1,Y1),ROTY(X1,Y1),CS,'(X10',ANG,4,-1)
	X1=X1+3.75*CS
	Y1=Y1+CS*0.4
	CALL NUMBER(ROTX(X1,Y1),ROTY(X1,Y1),CS,E1,ANG,0.0,-1)
	X2=AINT(ALOG10(ABS(E1)))+0.75
	IF (E1.LT.0.0) X2=X2+1.0
	X1=X1+X2*CS
	Y1=Y1-CS*0.4
	CALL SYMBOL(ROTX(X1,Y1),ROTY(X1,Y1),CS,')',ANG,1,-1)
1000	RETURN
	END
