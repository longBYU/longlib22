C
C *** LAST REVISED ON 13-OCT-1994 08:22:41.47
C *** SOURCE FILE: [LONGLIB93.SOURCES.FORTRAN.LONGLIB]LL_R.FOR
C
C *************************************************************************
C
C	LONGLIB.FOR SOURCE CODE ROUTINES FOR THE PLOTTING LIBRARY
C
C	ONLY VECTOR PLOTTING IS SUPPORTED.
C
C	THIS FILE CONSITS OF THE FIRST SECTION OF THE MAIN PLOT ROUTINES.
C	THIS FILE CONSISTS OF THE DEVICE DEPENDENT ROUTINES.
C	THE RAMTEK COMMUNICATIONS ROUTINES ARE IN A SEPARATE FILE.
C	DEVICE DEPENDENT ROUTINES ARE ALSO CONTAINED IN THE CURSORLIB FILE.
C
C	THIS FILE REFLECTS VERSION 7 OF THE LONGLIB GRAPHICS LIBRARY
C
C	THE SOURCE CODE IN THIS FILE IS COMPATIBLE WITH THE ANSI
C	FORTRAN 77 STANDARDS WITH THE FOLLOWING EXCEPTIONS:
C		1. TABS (^I) ARE USED TO INDENT LINES.
C		2. TRAILING COMMENTS WITH A "!" CHARACTER ARE USED
C		   EXTENSIVELY.
C		3. AN "INTEGER*2" DECLARTION IS USED IN PPLOTP.
C		   THIS MAY REPLACED BY AN "INTEGER" STATMENT AT THE EXPENSE
C		   OF LARGER PRINTER HISTORY FILE SIZES
C		4. SUBROUTINE AND VARIABLE NAMES OCCASIONALLY EXCEED
C		   SIX CHARACTERS IN LENGTH.
C
C	THE FOLLOWING ARE MACHINE DEPENDENT:
C		1. THE '$' IN A FORMAT STATEMENT CAUSES THE CURSOR
C		   TO BE LEFT AT THE END OF THE STATEMENT ON A PROMPT
C		2. COMMON BLOCKS ARE ASSUMED TO ALWAYS BE SAVED AND
C		   AVAILABLE FOR USE BY ANY ROUTINE AT ANY TIME.
C		3. THE FUNCTION "IAND" RETURNS THE BIT-WISE AND OF TWO
C		   INTEGER ARGUMENTS WHILE "IOR" RETURNS BIT-WISE OR.
C		4. THE READ AND WRITE LOGICAL FILE UNITS FOR TERMINAL
C		   ARE "*".
C		5. ROUTINES TO SUPPORT THE VAX CONTROL-C INTERRUPT
C		   ARE INCLUDED BUT MAY BE COMMENTED OUT.
C		6. THE ROUTINE "EXIT" IN FRAME STOPS THE EXECUTION
C		   OF THE PROGRAM
C
C *************************************************************************
C
	SUBROUTINE RTERM(IX)
C
C	FORTRAN-77 VERSION:   DGL JULY, 1987
C	CLEARS RAMTEK SCREEN -- SIMILAR TO CTERM
C
C IX	CONTROL FLAG
C	= 0 CLEAR RAMTEK SCREEN
C	= 2 ASK IF RAMTEK SCREEN CLEAR
C	=-2 CLEAR RAMTEK SCREEN
C	=-4 CLEAR RAMTEK SCREEN
C	= 3 CLOSE RAMTEK CHANNEL
C	=-3 REOPEN CLOSED RAMTEK CHANNEL
C
	COMMON/RMTEK/ICHAN,IMR(128),RRE(2),ROX,ROY,RSF,NIMR,RANG,MM,IPW,
     $		IPSC,ICOL,RVP(4),IRID,RLIM(2),IRXLIM,IRYLIM,IDDEV
	SAVE /RMTEK/
C
	CHARACTER*1 ANS
C
	IF (ICHAN.EQ.-99.AND.IX.EQ.2) GOTO 80
	IF (ICHAN.EQ.-99.AND.IX.EQ.-3) GOTO 80
	IF (ICHAN.LE.0) RETURN
	IF (IABS(IX).GT.4) RETURN
	GOTO (10,15,10,15,10,15,20,30,15),IX+5
10	CONTINUE			! CLEAR RAMTEK SCREEN
	CALL RMCLEAR(ICHAN,IERR)
15	RETURN
20	WRITE(*,5)			! ASK IF SCREEN CLEAR
5	FORMAT('$Clear Ramtek Screen? (y/n) [y] ')
	READ(*,6) ANS
6	FORMAT(A1)
	IANS=ICHAR(ANS)
	IF (IANS.GE.96) IANS=IANS-32
	IF (IANS.EQ.89.OR.IANS.EQ.32) THEN
		GOTO 10
	ELSE
		IF (IANS.EQ.81) GOTO 30 ! TEMP. CLOSE CHANNEL
		IF (IANS.EQ.83) THEN
			CALL RAMCLOSE(ICHAN)
			ICHAN=-99  		! SKIP PLOT MODE
		ENDIF
	ENDIF
	RETURN
30	CONTINUE				! TEMP. CLOSE CHANNEL
	CALL RAMCLOSE(ICHAN)
	ICHAN=-99
	RETURN
80	CONTINUE
	CALL RAMOPEN(ICHAN,IRID,IDDEV,IERR)
	IF (ICHAN.LT.0) WRITE(*,1)
1	FORMAT(' *** ERROR *** CAN NOT REOPEN RAMTEK CHANNEL')
	RETURN
	END
C
	SUBROUTINE RAMBOX(ICHAN1,IX1,IY1,IX2,IY2,JCOL)
C
C	FILLS IN A BOX ON THE RAMTEK
C	ICHAN:		RAMTEK CHANNEL NUMBER
C	(IX1,IY1):	LOWER LEFT CORNER (IN PIXELS)
C	(IX2,IY2):	UPPER RIGHT CORNER (IN PIXELS)
C	JCOL:		COLOR INDEX
C
	COMMON/RMTEK/ICHAN,IRM(128),RRE(2),ROX,ROY,RSF,NIRM,RANG,MM,IPW,
     $		IPSC,ICOL,RVP(4),IRID,RLIM(2),IRXLIM,IRYLIM,IDDEV
	SAVE /RMTEK/
	INTEGER MPLOT(4)
C
	IF (ICHAN1.LE.O) RETURN
	IF (IX2.LT.1) GOTO 5
	IF (IX1.GT.IRXLIM) GOTO 5
	IF (IY2.LT.1) GOTO 5
	IF (IY1.GT.IRYLIM) GOTO 5
	MPLOT(1)=MAX(1,IX1)
	MPLOT(3)=MIN(IRXLIM,IX2)
	IYY1=MAX(1,MIN(IY1,IY2))
	IYY2=MIN(IRYLIM,MAX(IY1,IY2))
C
	DO IY=IYY1,IYY2
		MPLOT(2)=IY
		MPLOT(4)=IY
		CALL RMPLOT(ICHAN1,2,MPLOT,JCOL,IERR)
	END DO
5	RETURN
	END
C
	SUBROUTINE RMWOPT(IWIND,IERR)
	ENTRY RMSAVE
	RETURN
	END
C
	SUBROUTINE CHCHAN(ICHAN2)
        COMMON/RMTEK/ICHAN,IMR(128),RRE(2),ROX,ROY,RSF,NIMR,RANG,MM,IPW,
     $          IPSC,ICOL,RVP(4),IRID,RLIM(2),IRXLIM,IRYLIM,IDDEV
	SAVE /RMTEK/
	ICHAN=ICHAN2
	RETURN
	END
