C
C
	SUBROUTINE AXIS3D(X0,Y0,Z0,PA,PB,PG,T,N0,S0,B0,C0,D0,E0,F0)
C
C	CREATED: DGL 1-OCT-1984
C
C	X0	X COORDINATE OF START OF AXIS
C	Y0	Y COORDINATE OF START OF AXIS
C	Z0	Z COORDINATE OF START OF AXIS
C	T	CHARACTER STRING TO DESCRIBE AXIS
C	PA	ANGLE FROM X-Y PLANE (DEG)
C	PB	ANGLE FROM X-Z PLANE (DEG)
C	PG	ANGLE OF ROTATION AROUND PA,PB RAY (DEG)
C	N0	NUMBER OF CHARACTERS IN STRING
C		- ON CLOCKWISE SIDE OF AXIS (NORMAL FOR X)
C		+ ON COUNTER CLOCKWISE SIDE OF AXIS (NORMAL FOR Y)
C		HUNDREDS DIGIT	= 1 NO LABELING OF AXIS--TICKS AND LINE ONLY
C	S0	LENGTH OF AXIS IN INCHES
C		< 0	TICKS PLACED ON OPPOSITE SIDE OF AXIS LABEL
C		= 0	NO ACTION (NOP)
C		> 0	NORMAL
C	B0	MINIMUM VALUE ON TICK AXIS
C	C0	MAXIMUM VALUE ON TICK AXIS
C	D0	INT(D0) = NUMBER OF MAJOR AXIS TICKS
C		INT((INT(D0)-D0)*100) = NUMBER OF MINOR AXIS TICKS BETWEEN MAJOR TICKS
C		INT(MOD((INT(D0)-D0)*10000,100) = NUMBER OF SUB MINOR AXIS TICKS 
C			BETWEEN MINOR TICKS
C	E0	CHARACTER SIZE OF TITLE AND NUMBER (IF E0=0 DEFAULTS TO .15)
C			< 0 THEN DO NOT AUTO SCALE BY (x10 TO POWER)
C	F0	NUMBER SPECIFICATION (FORMAT FX.Y) (2 DIGITS FOR Y, MAX(X)=18)
C
	DIMENSION ROT(4,4),TEMP(4,4),V(4)
	CHARACTER*(*) T
	DATA SPACE/0.08/		! MIN SPACING BETWEEN ITEMS
	XROT3D(X,Y)=XVMUL3D(1,X,Y,0.0,V,ROT)+X01
	YROT3D(X,Y)=XVMUL3D(2,X,Y,0.0,V,ROT)+Y01
	ZROT3D(X,Y)=XVMUL3D(3,X,Y,0.0,V,ROT)+Z01
C
	TL=0.1				! TICK LENGTH
	X01=X0
	Y01=Y0
	Z01=Z0
	PAA=PA
	PBA=PB
	PGA=PG
	E1=E0				! CHARACTER SIZE
	CS=ABS(E1)
	IF (CS.EQ.0.) CS=.15
	IF (S0.EQ.0.0) GOTO 1000	! ZERO LENGTH AXIS
	X1=D0*1.000002
	NJT=int(ABS(X1))		! NUMBER OF MAJOR TICKS
	NNT=int(100.*(ABS(X1)-NJT))		! NUMBER OF MINOR TICKS
	NST=int(100.*((ABS(X1)-NJT)*100.-NNT))	! NUMBER OF SUB-MINOR TICKS
	IF (NJT.LT.2) NJT=2
	XJ=ABS(S0)/(NJT-1)		! INCREMENT BETWEEN MAJOR TICKS
	XN=XJ
	IF (NNT.NE.0) XN=XN/(NNT+1)	! INCREMENT BETWEEN MINOR TICKS
	XS=XN/(NST+1)			! INCREMENT BETWEEN SUB-MINOR TICKS
	N1=N0
	HOR=0.0
	IF (IABS(N1).GE.1000) HOR=90.	! DEFAULT ROTATION ANGLE
	NC=MOD(IABS(N1),100)		! NUMBER OF CHARACTERS IN TITLE
	FA=F0				! FORMAT NUMBER
	ND=int(MOD(ABS(FA),1000.))	! NUMBER OF DIGITS
	NG=int(100.*(MOD(ABS(FA),1000.)-ND))	! NUMBER OF DIGITS RIGHT OF D.P.
	IF (NG.GT.17) NG=NG/10		! CORRECT SIMPLE ERRORS
	IF (ND.EQ.0) ND=NG
	IF (ABS(FA).GT.1000) NG=-1	! FORMATTED INTEGER
	TL1=TL
	IF (S0.LT.0.) TL1=-TL		! REVERSE SIDE OF TICKS
	IF (S0.LT.0.) TL=0.		! REVERSE SIDE OF TICKS
	IF (IABS(N1).GE.1000) GOTO 10
		DNX=-ND*CS/2.		! NUMBER LABEL DISTANCE FROM AXIS
		DNY=-TL-SPACE-CS	! NUMBER LABEL DISTANCE FROM AXIS
		DTY=DNY-CS-SPACE	! TITLE DISTANCE FROM AXIS
		GOTO 20
10	CONTINUE			! HORIZONTAL NUMBERS ON VERTICAL AXIS
		DNX=-CS/2.		! NUMBER LABEL DISTANCE FROM AXIS
		DNY=-TL-SPACE		! NUMBER LABEL DISTANCE FROM AXIS
		DTY=DNY-ND*CS-SPACE	! TITLE DISTANCE FROM AXIS
20	DTX=(ABS(S0)-NC*CS)/2.		! TITLE DISTANCE FROM AXIS
	IF (N1.LT.0) GOTO 30		! CLOCKWISE TITLES
		DNY=-DNY-CS		! COUNTER-CLOCKWISE TITLES
		DTY=-DTY-CS
		TL1=-TL1		! CHANGE SIDES OF TICKS
		IF (IABS(N1).LT.1000) GOTO 30
			DNY=DNY+CS*ND
			DTY=DNY+SPACE
30	CONTINUE
C
C	SET UP 3-D CONVERSION MATRIXES
C
	CALL ROTEM(1,PGA,ROT)
	CALL ROTEM(3,PBA,TEMP)
	CALL MATMUL4(ROT,ROT,TEMP)
	CALL ROTEM(2,PAA,TEMP)
	CALL MATMUL4(ROT,ROT,TEMP)
C
	X1=0.0				! FIRST MAJOR TICK
	Y1=0.0
	Y2=-TL1
	CALL PLOT3D(XROT3D(X1,Y1),YROT3D(X1,Y1),ZROT3D(X1,Y1),3)
	CALL PLOT3D(XROT3D(X1,Y2),YROT3D(X1,Y2),ZROT3D(X1,Y1),2)
	DO 100 I=1,NJT-1		! MAJOR TICKS
		CALL PLOT3D(XROT3D(X1,Y1),YROT3D(X1,Y1),ZROT3D(X1,Y1),3)
		X1=XJ*I
		Y2=-TL1
		CALL PLOT3D(XROT3D(X1,Y1),YROT3D(X1,Y1),ZROT3D(X1,Y1),2)
		CALL PLOT3D(XROT3D(X1,Y2),YROT3D(X1,Y2),ZROT3D(X1,Y2),2)
		DO 110 J=1,NNT+1	! MINOR TICKS
			Y2=-TL1*.7
			X2=X1+XN*J-XJ
		CALL PLOT3D(XROT3D(X2,Y1),YROT3D(X2,Y1),ZROT3D(X2,Y1),3)
		CALL PLOT3D(XROT3D(X2,Y2),YROT3D(X2,Y2),ZROT3D(X2,Y2),2)
			Y2=-TL1*.4
			DO 120 K=1,NST	! SUB MINOR TICKS
				X3=X2+XS*K-XN
		CALL PLOT3D(XROT3D(X3,Y1),YROT3D(X3,Y1),ZROT3D(X3,Y1),3)
		CALL PLOT3D(XROT3D(X3,Y2),YROT3D(X3,Y2),ZROT3D(X3,Y2),2)
120			CONTINUE
110		CONTINUE
100	CONTINUE
	IF (MOD(IABS(N1),1000)/100.NE.0) GOTO 1000 ! NO LABELING
	XS=0.0					! EXPONENT
	IF (E1.LT.0.) GOTO 140			! NO AUTO SCALING
	X1=0.
	Y1=0.
	I=ND-NG-2
	IF (B0.LT.0..OR.C0.LT.0.) I=I-1
	IF (B0.NE.0.) X1=ALOG10(ABS(B0))
	IF (X1.LT.0..AND.X1.NE.AINT(X1)) X1=X1-1.
	X1=AINT(X1)
	IF (C0.NE.0.) Y1=ALOG10(ABS(C0))
	IF (Y1.LT.0..AND.Y1.NE.AINT(Y1)) Y1=Y1-1.
	Y1=AINT(Y1)
	X2=MIN(X1,Y1)
	X3=MAX(X1,Y1)
	IF (X2.LT.0.0.AND.NG.LE.-X2) XS=-NG+1-X2
	IF (I.LT.X3+XS) XS=I-X3-XS
140	Y1=DNY
	Y2=(C0-B0)/(NJT-1)
	E1=XS					! EXPONENT VALUE
	DO 150 I=1,NJT				! LABEL MAJOR TICKS
		X1=(I-1)*XJ+DNX
		C1=(Y2*(I-1)+B0)*10.**E1
		CALL NUM3D(XROT3D(X1,Y1),YROT3D(X1,Y1),ZROT3D(X1,Y1),
     $			PAA,PBA,PGA,CS,C1,FA)
150	CONTINUE
	IF (E1.NE.0.0) DTX=DTX-CS*3.		! ADD EXPONENT SPACE
	X1=DTX
	Y1=DTY
	IF (NC.NE.0) CALL SYM3D(XROT3D(X1,Y1),YROT3D(X1,Y1),ZROT3D(X1,Y1),
     $		PAA,PBA,PGA,CS,T,NC)
	IF (E1.EQ.0.0) GOTO 1000		! NO EXPONENT
	X1=X1+NC*CS
	CALL SYM3D(XROT3D(X1,Y1),YROT3D(X1,Y1),ZROT3D(X1,Y1),
     $		PAA,PBA,PGA,CS,'(X10)',5)
	X1=X1+4.5*CS
	Y1=Y1+CS/2.
	CS=CS/2.
	CALL NUM3D(XROT3D(X1,Y1),YROT3D(X1,Y1),ZROT3D(X1,Y1),
     $		PAA,PBA,PGA,CS,E1,0.0)
1000	RETURN
	END
