C
C *** LAST REVISED ON  8-FEB-1994 00:05:06.56
C *** SOURCE FILE: [LONGLIB93.SOURCES.FORTRAN.MAPLIB]LNDSEA.FOR
C ************************************************************************
C
	INTEGER FUNCTION LNDSEA(ALAT,ALON)
C
C	THIS ROUTINE RETURNS A FLAG INDICATING IF THE POINT
C	(ALAT,ALON) IS EITHER ALL LAND OR ALL SEA.
C
C	INPUTS:
C		ALAT	(R)	LATTITUDE (DEGREES)
C		ALON	(R)	LONGITUDE (DEGREES)
C	OUTPUTS:
C		LNDSEA	(I)	LAND/SEA FLAG
C				  = 0 FOR OCEAN
C				 <> 0 FOR LAND
C	CALLS: (NONE)
C
C	NOTE: USES FORTRAN FILE UNIT #1
C
 	INTEGER*4 ALLSAM(481),CIADAT(4,120),BIT(32)
	EQUIVALENCE (ALLSAM(2),CIADAT(1,1))
	SAVE
	INCLUDE 'files.inc'
	DATA IOPEN/0/,LU/1/,IRECLA/0/
C
C	OPEN BITMAP IMAGE FILE OF LAND/SEA
C
	IF (IOPEN.EQ.0) THEN
		IOPEN=1
	        OPEN(UNIT=LU,FILE=LANDSEA,RECL=1924,FORM='UNFORMATTED',
     &		 ACCESS='DIRECT',STATUS='OLD',ERR=99)
C     &	         READONLY,MAXREC=648)
C
C	LOAD DECODING BITMAP
C
		DO 10 I=1,32
			IZ=0
			BIT(I)=IBSET(IZ,32-I)
10		CONTINUE
	ENDIF
C
C   ENSURE VALID INPUT ANGLES
C
	BLON=AMOD(ALON,360.)
	IF (BLON.LT.0.0) BLON=BLON+360.
	BLAT=AMOD(ALAT+90.0,360.)
	IF (BLAT.GT.180.0) BLAT=BLAT-180.0
	IF (BLAT.LT.0.0) BLAT=BLAT+180.0
C
C   SET UP FILE POINTERS
C
	JLAT0=IFIX(BLAT)/10
	IF (JLAT0.EQ.18) JLAT0=17
	JLON0=IFIX(BLON)/10
	IF (JLON0.EQ.360) JLON0=1
	IREC=((JLAT0)*36)+JLON0+1
C
C   SEE IF A NEW RECORD MUST BE FETCHED
C
	IF (IREC.NE.IRECLA) THEN
		READ(LU,REC=IREC,ERR=99) ALLSAM
		IRECLA=IREC
	ENDIF
C
C   CHECK FOR 'ALL LAND' OR 'ALL SEA'
C
	IF (ALLSAM(1).NE.-1) THEN
 		LNDSEA=ALLSAM(1)
		RETURN
	ENDIF
C
C	COMPUTE ADDRESS IN BUFFER
C
	JLAT=INT((BLAT-FLOAT(10*JLAT0))*12)+1
	IF (JLAT.EQ.121) JLAT=120
	JLON=INT((BLON-FLOAT(10*JLON0))*12)+1
	IWORD=(JLON+29)/30
	IBIT=JLON-(30*(IWORD-1))
C
C	EXTRACT BIT
C
	LNDSEA=IAND(CIADAT(IWORD,JLAT),BIT(IBIT))
	IF (LNDSEA.NE.0) LNDSEA=1
	RETURN
C
C	FILE ERRORS
C
99	WRITE(*,45)
 45	FORMAT(' *** ERROR OPENING/READING LNDSEA1.DAT FILE ***')
	LNDSEA=0
	RETURN
	END





